/**
  ******************************************************************************
  * @file    main.c
  * @author  Auto-generated by STM32CubeIDE
  * @version V1.0
  * @brief   Default main function.
  ******************************************************************************
*/

#include<stdio.h>
#include<stdint.h>

int main(){
	// Addresses as pointers
	uint32_t* pClkCtrlreg = (uint32_t*)(0x40023830);		// RCC_AHB1ENR Clock enable register
	uint32_t* pPortDModereg = (uint32_t*)(0x40020C00);		// GPIO D Control Mode
	uint32_t* pPortDOutreg = (uint32_t*)(0x40020C14);		// GPIO D Output Data register
	uint32_t* pPortAModereg = (uint32_t*)(0x40020000);		// GPIO A Control Mode
	uint32_t* pPortAInreg = (uint32_t*)(0x40020010);		// GPIO A Input Data Mode
	uint32_t temp;

	// To not affect other registers, use bit manipulation.
	*pClkCtrlreg |= (1<<3);									// Clock enabled for Port D
	*pPortDModereg &= ~(3<<24);								// Clear 24th and 25th bit
	*pPortDModereg |= (1<<24);								// Set 24th bit

	*pPortAModereg =
	temp = (uint32_t)*pPortAInreg;
	temp &= 0x1;
	if(temp == 1){

	}
/*
	while(1){
		*pPortDOutreg |= (1<<12);							// Setting the 12th bit
		for(int i=0; i<300000; ++i);
		*pPortDOutreg &= ~(1<<12);							// Clearing the 12th bit
		for(int i=0; i<300000; ++i);
	}
*/
	return 0;
}
