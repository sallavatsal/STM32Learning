
006Membrane4x4Keypad.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013d4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000198  08001584  08001584  00011584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800171c  0800171c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800171c  0800171c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800171c  0800171c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800171c  0800171c  0001171c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001720  08001720  00011720  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001724  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08001788  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08001788  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000272b  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005f0  00000000  00000000  000227bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  00022db0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  00022ec8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a84  00000000  00000000  00022fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012f8  00000000  00000000  00025a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009247  00000000  00000000  00026d24  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002ff6b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a6c  00000000  00000000  0002ffe8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800156c 	.word	0x0800156c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	0800156c 	.word	0x0800156c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <delay>:

#include<stdio.h>
#include<stdint.h>
#include "main.h"

void delay(void){
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<300000; ++i);
 8000296:	2300      	movs	r3, #0
 8000298:	607b      	str	r3, [r7, #4]
 800029a:	e002      	b.n	80002a2 <delay+0x12>
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	3301      	adds	r3, #1
 80002a0:	607b      	str	r3, [r7, #4]
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a04      	ldr	r2, [pc, #16]	; (80002b8 <delay+0x28>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d9f8      	bls.n	800029c <delay+0xc>
}
 80002aa:	bf00      	nop
 80002ac:	370c      	adds	r7, #12
 80002ae:	46bd      	mov	sp, r7
 80002b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	000493df 	.word	0x000493df

080002bc <main>:

int main(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	b086      	sub	sp, #24
 80002c0:	af00      	add	r7, sp, #0
	RCC_AHB1ENR_t volatile *const pClkCtrlreg = (RCC_AHB1ENR_t*)(0x40023830);		// Clock enable
 80002c2:	4ba3      	ldr	r3, [pc, #652]	; (8000550 <main+0x294>)
 80002c4:	617b      	str	r3, [r7, #20]
	GPIOx_MODE_t volatile *const pPortDModereg = (GPIOx_MODE_t*)(0x40020C00);		// GPIOD Control Mode
 80002c6:	4ba3      	ldr	r3, [pc, #652]	; (8000554 <main+0x298>)
 80002c8:	613b      	str	r3, [r7, #16]
	GPIOx_PUPDR_t volatile *const pPortDPUPDreg = (GPIOx_PUPDR_t*)(0x40020C00);		// GPIO D Pull-Up/Pull Down register
 80002ca:	4ba2      	ldr	r3, [pc, #648]	; (8000554 <main+0x298>)
 80002cc:	60fb      	str	r3, [r7, #12]
	GPIOx_ODR_t volatile *const pPortDOutreg = (GPIOx_ODR_t*)(0x40020C14);			// GPIO D Output Data register
 80002ce:	4ba2      	ldr	r3, [pc, #648]	; (8000558 <main+0x29c>)
 80002d0:	60bb      	str	r3, [r7, #8]
	GPIOx_IDR_t volatile *const pPortDInreg = (GPIOx_IDR_t*)(0x40020C00);			// GPIO D Input Data register
 80002d2:	4ba0      	ldr	r3, [pc, #640]	; (8000554 <main+0x298>)
 80002d4:	607b      	str	r3, [r7, #4]

	// Enable Clock for the GPIO pin
	pClkCtrlreg->GPIOD_EN = 1;														// GPIOD enabled
 80002d6:	697a      	ldr	r2, [r7, #20]
 80002d8:	6813      	ldr	r3, [r2, #0]
 80002da:	f043 0308 	orr.w	r3, r3, #8
 80002de:	6013      	str	r3, [r2, #0]

	// Configure Port Mode register as input/output for the respective keypad connected pins
	pPortDModereg->PIN_0 = 1;														// Set as output
 80002e0:	693a      	ldr	r2, [r7, #16]
 80002e2:	6813      	ldr	r3, [r2, #0]
 80002e4:	2101      	movs	r1, #1
 80002e6:	f361 0301 	bfi	r3, r1, #0, #2
 80002ea:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_1 = 1;														// Set as output
 80002ec:	693a      	ldr	r2, [r7, #16]
 80002ee:	6813      	ldr	r3, [r2, #0]
 80002f0:	2101      	movs	r1, #1
 80002f2:	f361 0383 	bfi	r3, r1, #2, #2
 80002f6:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_2 = 1;														// Set as output
 80002f8:	693a      	ldr	r2, [r7, #16]
 80002fa:	6813      	ldr	r3, [r2, #0]
 80002fc:	2101      	movs	r1, #1
 80002fe:	f361 1305 	bfi	r3, r1, #4, #2
 8000302:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_3 = 1;														// Set as output
 8000304:	693a      	ldr	r2, [r7, #16]
 8000306:	6813      	ldr	r3, [r2, #0]
 8000308:	2101      	movs	r1, #1
 800030a:	f361 1387 	bfi	r3, r1, #6, #2
 800030e:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_8 = 0;														// Set as input
 8000310:	693a      	ldr	r2, [r7, #16]
 8000312:	6813      	ldr	r3, [r2, #0]
 8000314:	f36f 4311 	bfc	r3, #16, #2
 8000318:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_9 = 0;														// Set as input
 800031a:	693a      	ldr	r2, [r7, #16]
 800031c:	6813      	ldr	r3, [r2, #0]
 800031e:	f36f 4393 	bfc	r3, #18, #2
 8000322:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_10 = 0;														// Set as input
 8000324:	693a      	ldr	r2, [r7, #16]
 8000326:	6813      	ldr	r3, [r2, #0]
 8000328:	f36f 5315 	bfc	r3, #20, #2
 800032c:	6013      	str	r3, [r2, #0]
	pPortDModereg->PIN_11 = 0;														// Set as input
 800032e:	693a      	ldr	r2, [r7, #16]
 8000330:	6813      	ldr	r3, [r2, #0]
 8000332:	f36f 5397 	bfc	r3, #22, #2
 8000336:	6013      	str	r3, [r2, #0]

	// Configure all the input/output pins as HIGH
	pPortDOutreg->PIN_0 = 1;														// Setting Out Pin 0
 8000338:	68ba      	ldr	r2, [r7, #8]
 800033a:	6813      	ldr	r3, [r2, #0]
 800033c:	f043 0301 	orr.w	r3, r3, #1
 8000340:	6013      	str	r3, [r2, #0]
	pPortDOutreg->PIN_1 = 1;														// Setting Out Pin 1
 8000342:	68ba      	ldr	r2, [r7, #8]
 8000344:	6813      	ldr	r3, [r2, #0]
 8000346:	f043 0302 	orr.w	r3, r3, #2
 800034a:	6013      	str	r3, [r2, #0]
	pPortDOutreg->PIN_2 = 1;														// Setting Out Pin 2
 800034c:	68ba      	ldr	r2, [r7, #8]
 800034e:	6813      	ldr	r3, [r2, #0]
 8000350:	f043 0304 	orr.w	r3, r3, #4
 8000354:	6013      	str	r3, [r2, #0]
	pPortDOutreg->PIN_3 = 1;														// Setting Out Pin 3
 8000356:	68ba      	ldr	r2, [r7, #8]
 8000358:	6813      	ldr	r3, [r2, #0]
 800035a:	f043 0308 	orr.w	r3, r3, #8
 800035e:	6013      	str	r3, [r2, #0]
	pPortDPUPDreg->PIN_8 = 1;														// Setting In pin 8
 8000360:	68fa      	ldr	r2, [r7, #12]
 8000362:	6813      	ldr	r3, [r2, #0]
 8000364:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000368:	6013      	str	r3, [r2, #0]
	pPortDPUPDreg->PIN_9 = 1;														// Setting In pin 9
 800036a:	68fa      	ldr	r2, [r7, #12]
 800036c:	6813      	ldr	r3, [r2, #0]
 800036e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000372:	6013      	str	r3, [r2, #0]
	pPortDPUPDreg->PIN_10 = 1;														// Setting In pin 10
 8000374:	68fa      	ldr	r2, [r7, #12]
 8000376:	6813      	ldr	r3, [r2, #0]
 8000378:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800037c:	6013      	str	r3, [r2, #0]
	pPortDPUPDreg->PIN_11 = 1;														// Setting In pin 11
 800037e:	68fa      	ldr	r2, [r7, #12]
 8000380:	6813      	ldr	r3, [r2, #0]
 8000382:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000386:	6013      	str	r3, [r2, #0]

	while(1){
		pPortDOutreg->PIN_0 = 0;														// Clearing Out Pin 0
 8000388:	68ba      	ldr	r2, [r7, #8]
 800038a:	6813      	ldr	r3, [r2, #0]
 800038c:	f36f 0300 	bfc	r3, #0, #1
 8000390:	6013      	str	r3, [r2, #0]
		if(!(pPortDOutreg->PIN_8)){
 8000392:	68bb      	ldr	r3, [r7, #8]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800039a:	b2db      	uxtb	r3, r3
 800039c:	2b00      	cmp	r3, #0
 800039e:	d105      	bne.n	80003ac <main+0xf0>
			delay();
 80003a0:	f7ff ff76 	bl	8000290 <delay>
			printf("1 is pressed");
 80003a4:	486d      	ldr	r0, [pc, #436]	; (800055c <main+0x2a0>)
 80003a6:	f000 f9fd 	bl	80007a4 <iprintf>
 80003aa:	e025      	b.n	80003f8 <main+0x13c>
		}
		else if(!(pPortDOutreg->PIN_9)){
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	f3c3 2340 	ubfx	r3, r3, #9, #1
 80003b4:	b2db      	uxtb	r3, r3
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d105      	bne.n	80003c6 <main+0x10a>
			delay();
 80003ba:	f7ff ff69 	bl	8000290 <delay>
			printf("2 is pressed");
 80003be:	4868      	ldr	r0, [pc, #416]	; (8000560 <main+0x2a4>)
 80003c0:	f000 f9f0 	bl	80007a4 <iprintf>
 80003c4:	e018      	b.n	80003f8 <main+0x13c>
		}
		else if(!(pPortDOutreg->PIN_10)){
 80003c6:	68bb      	ldr	r3, [r7, #8]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	f3c3 2380 	ubfx	r3, r3, #10, #1
 80003ce:	b2db      	uxtb	r3, r3
 80003d0:	2b00      	cmp	r3, #0
 80003d2:	d105      	bne.n	80003e0 <main+0x124>
			delay();
 80003d4:	f7ff ff5c 	bl	8000290 <delay>
			printf("3 is pressed");
 80003d8:	4862      	ldr	r0, [pc, #392]	; (8000564 <main+0x2a8>)
 80003da:	f000 f9e3 	bl	80007a4 <iprintf>
 80003de:	e00b      	b.n	80003f8 <main+0x13c>
		}
		else if(!(pPortDOutreg->PIN_11)){
 80003e0:	68bb      	ldr	r3, [r7, #8]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 80003e8:	b2db      	uxtb	r3, r3
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	d104      	bne.n	80003f8 <main+0x13c>
			delay();
 80003ee:	f7ff ff4f 	bl	8000290 <delay>
			printf("A is pressed");
 80003f2:	485d      	ldr	r0, [pc, #372]	; (8000568 <main+0x2ac>)
 80003f4:	f000 f9d6 	bl	80007a4 <iprintf>
		}
/*		else{
			delay();
			printf("No key is pressed");
		}
*/		pPortDOutreg->PIN_0 = 1;														// Setting Out Pin 0
 80003f8:	68ba      	ldr	r2, [r7, #8]
 80003fa:	6813      	ldr	r3, [r2, #0]
 80003fc:	f043 0301 	orr.w	r3, r3, #1
 8000400:	6013      	str	r3, [r2, #0]
		pPortDOutreg->PIN_1 = 0;														// Clearing Out Pin 1
 8000402:	68ba      	ldr	r2, [r7, #8]
 8000404:	6813      	ldr	r3, [r2, #0]
 8000406:	f36f 0341 	bfc	r3, #1, #1
 800040a:	6013      	str	r3, [r2, #0]
		if(!(pPortDOutreg->PIN_8)){
 800040c:	68bb      	ldr	r3, [r7, #8]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	f3c3 2300 	ubfx	r3, r3, #8, #1
 8000414:	b2db      	uxtb	r3, r3
 8000416:	2b00      	cmp	r3, #0
 8000418:	d105      	bne.n	8000426 <main+0x16a>
			delay();
 800041a:	f7ff ff39 	bl	8000290 <delay>
			printf("4 is pressed");
 800041e:	4853      	ldr	r0, [pc, #332]	; (800056c <main+0x2b0>)
 8000420:	f000 f9c0 	bl	80007a4 <iprintf>
 8000424:	e025      	b.n	8000472 <main+0x1b6>
		}
		else if(!(pPortDOutreg->PIN_9)){
 8000426:	68bb      	ldr	r3, [r7, #8]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800042e:	b2db      	uxtb	r3, r3
 8000430:	2b00      	cmp	r3, #0
 8000432:	d105      	bne.n	8000440 <main+0x184>
			delay();
 8000434:	f7ff ff2c 	bl	8000290 <delay>
			printf("5 is pressed");
 8000438:	484d      	ldr	r0, [pc, #308]	; (8000570 <main+0x2b4>)
 800043a:	f000 f9b3 	bl	80007a4 <iprintf>
 800043e:	e018      	b.n	8000472 <main+0x1b6>
		}
		else if(!(pPortDOutreg->PIN_10)){
 8000440:	68bb      	ldr	r3, [r7, #8]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	f3c3 2380 	ubfx	r3, r3, #10, #1
 8000448:	b2db      	uxtb	r3, r3
 800044a:	2b00      	cmp	r3, #0
 800044c:	d105      	bne.n	800045a <main+0x19e>
			delay();
 800044e:	f7ff ff1f 	bl	8000290 <delay>
			printf("6 is pressed");
 8000452:	4848      	ldr	r0, [pc, #288]	; (8000574 <main+0x2b8>)
 8000454:	f000 f9a6 	bl	80007a4 <iprintf>
 8000458:	e00b      	b.n	8000472 <main+0x1b6>
		}
		else if(!(pPortDOutreg->PIN_11)){
 800045a:	68bb      	ldr	r3, [r7, #8]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 8000462:	b2db      	uxtb	r3, r3
 8000464:	2b00      	cmp	r3, #0
 8000466:	d104      	bne.n	8000472 <main+0x1b6>
			delay();
 8000468:	f7ff ff12 	bl	8000290 <delay>
			printf("B is pressed");
 800046c:	4842      	ldr	r0, [pc, #264]	; (8000578 <main+0x2bc>)
 800046e:	f000 f999 	bl	80007a4 <iprintf>
		}
/*		else{
			delay();
			printf("No key is pressed");
		}
*/		pPortDOutreg->PIN_1 = 1;														// Setting Out Pin 1
 8000472:	68ba      	ldr	r2, [r7, #8]
 8000474:	6813      	ldr	r3, [r2, #0]
 8000476:	f043 0302 	orr.w	r3, r3, #2
 800047a:	6013      	str	r3, [r2, #0]
		pPortDOutreg->PIN_2 = 0;														// Clearing Out Pin 2
 800047c:	68ba      	ldr	r2, [r7, #8]
 800047e:	6813      	ldr	r3, [r2, #0]
 8000480:	f36f 0382 	bfc	r3, #2, #1
 8000484:	6013      	str	r3, [r2, #0]
		if(!(pPortDOutreg->PIN_8)){
 8000486:	68bb      	ldr	r3, [r7, #8]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800048e:	b2db      	uxtb	r3, r3
 8000490:	2b00      	cmp	r3, #0
 8000492:	d105      	bne.n	80004a0 <main+0x1e4>
			delay();
 8000494:	f7ff fefc 	bl	8000290 <delay>
			printf("7 is pressed");
 8000498:	4838      	ldr	r0, [pc, #224]	; (800057c <main+0x2c0>)
 800049a:	f000 f983 	bl	80007a4 <iprintf>
 800049e:	e025      	b.n	80004ec <main+0x230>
		}
		else if(!(pPortDOutreg->PIN_9)){
 80004a0:	68bb      	ldr	r3, [r7, #8]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	f3c3 2340 	ubfx	r3, r3, #9, #1
 80004a8:	b2db      	uxtb	r3, r3
 80004aa:	2b00      	cmp	r3, #0
 80004ac:	d105      	bne.n	80004ba <main+0x1fe>
			delay();
 80004ae:	f7ff feef 	bl	8000290 <delay>
			printf("8 is pressed");
 80004b2:	4833      	ldr	r0, [pc, #204]	; (8000580 <main+0x2c4>)
 80004b4:	f000 f976 	bl	80007a4 <iprintf>
 80004b8:	e018      	b.n	80004ec <main+0x230>
		}
		else if(!(pPortDOutreg->PIN_10)){
 80004ba:	68bb      	ldr	r3, [r7, #8]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	f3c3 2380 	ubfx	r3, r3, #10, #1
 80004c2:	b2db      	uxtb	r3, r3
 80004c4:	2b00      	cmp	r3, #0
 80004c6:	d105      	bne.n	80004d4 <main+0x218>
			delay();
 80004c8:	f7ff fee2 	bl	8000290 <delay>
			printf("9 is pressed");
 80004cc:	482d      	ldr	r0, [pc, #180]	; (8000584 <main+0x2c8>)
 80004ce:	f000 f969 	bl	80007a4 <iprintf>
 80004d2:	e00b      	b.n	80004ec <main+0x230>
		}
		else if(!(pPortDOutreg->PIN_11)){
 80004d4:	68bb      	ldr	r3, [r7, #8]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 80004dc:	b2db      	uxtb	r3, r3
 80004de:	2b00      	cmp	r3, #0
 80004e0:	d104      	bne.n	80004ec <main+0x230>
			delay();
 80004e2:	f7ff fed5 	bl	8000290 <delay>
			printf("C is pressed");
 80004e6:	4828      	ldr	r0, [pc, #160]	; (8000588 <main+0x2cc>)
 80004e8:	f000 f95c 	bl	80007a4 <iprintf>
		}
/*		else{
			delay();
			printf("No key is pressed");
		}
*/		pPortDOutreg->PIN_2 = 1;														// Setting Out Pin 2
 80004ec:	68ba      	ldr	r2, [r7, #8]
 80004ee:	6813      	ldr	r3, [r2, #0]
 80004f0:	f043 0304 	orr.w	r3, r3, #4
 80004f4:	6013      	str	r3, [r2, #0]
		pPortDOutreg->PIN_3 = 0;														// Setting Out Pin 3
 80004f6:	68ba      	ldr	r2, [r7, #8]
 80004f8:	6813      	ldr	r3, [r2, #0]
 80004fa:	f36f 03c3 	bfc	r3, #3, #1
 80004fe:	6013      	str	r3, [r2, #0]
		if(!(pPortDOutreg->PIN_8)){
 8000500:	68bb      	ldr	r3, [r7, #8]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	f3c3 2300 	ubfx	r3, r3, #8, #1
 8000508:	b2db      	uxtb	r3, r3
 800050a:	2b00      	cmp	r3, #0
 800050c:	d105      	bne.n	800051a <main+0x25e>
			delay();
 800050e:	f7ff febf 	bl	8000290 <delay>
			printf("* is pressed");
 8000512:	481e      	ldr	r0, [pc, #120]	; (800058c <main+0x2d0>)
 8000514:	f000 f946 	bl	80007a4 <iprintf>
 8000518:	e736      	b.n	8000388 <main+0xcc>
		}
		else if(!(pPortDOutreg->PIN_9)){
 800051a:	68bb      	ldr	r3, [r7, #8]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	f3c3 2340 	ubfx	r3, r3, #9, #1
 8000522:	b2db      	uxtb	r3, r3
 8000524:	2b00      	cmp	r3, #0
 8000526:	d105      	bne.n	8000534 <main+0x278>
			delay();
 8000528:	f7ff feb2 	bl	8000290 <delay>
			printf("0 is pressed");
 800052c:	4818      	ldr	r0, [pc, #96]	; (8000590 <main+0x2d4>)
 800052e:	f000 f939 	bl	80007a4 <iprintf>
 8000532:	e729      	b.n	8000388 <main+0xcc>
		}
		else if(!(pPortDOutreg->PIN_10)){
 8000534:	68bb      	ldr	r3, [r7, #8]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800053c:	b2db      	uxtb	r3, r3
 800053e:	2b00      	cmp	r3, #0
 8000540:	d12a      	bne.n	8000598 <main+0x2dc>
			delay();
 8000542:	f7ff fea5 	bl	8000290 <delay>
			printf("# is pressed");
 8000546:	4813      	ldr	r0, [pc, #76]	; (8000594 <main+0x2d8>)
 8000548:	f000 f92c 	bl	80007a4 <iprintf>
 800054c:	e71c      	b.n	8000388 <main+0xcc>
 800054e:	bf00      	nop
 8000550:	40023830 	.word	0x40023830
 8000554:	40020c00 	.word	0x40020c00
 8000558:	40020c14 	.word	0x40020c14
 800055c:	08001584 	.word	0x08001584
 8000560:	08001594 	.word	0x08001594
 8000564:	080015a4 	.word	0x080015a4
 8000568:	080015b4 	.word	0x080015b4
 800056c:	080015c4 	.word	0x080015c4
 8000570:	080015d4 	.word	0x080015d4
 8000574:	080015e4 	.word	0x080015e4
 8000578:	080015f4 	.word	0x080015f4
 800057c:	08001604 	.word	0x08001604
 8000580:	08001614 	.word	0x08001614
 8000584:	08001624 	.word	0x08001624
 8000588:	08001634 	.word	0x08001634
 800058c:	08001644 	.word	0x08001644
 8000590:	08001654 	.word	0x08001654
 8000594:	08001664 	.word	0x08001664
		}
		else if(!(pPortDOutreg->PIN_11)){
 8000598:	68bb      	ldr	r3, [r7, #8]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 80005a0:	b2db      	uxtb	r3, r3
 80005a2:	2b00      	cmp	r3, #0
 80005a4:	f47f aef0 	bne.w	8000388 <main+0xcc>
			delay();
 80005a8:	f7ff fe72 	bl	8000290 <delay>
			printf("D is pressed");
 80005ac:	4801      	ldr	r0, [pc, #4]	; (80005b4 <main+0x2f8>)
 80005ae:	f000 f8f9 	bl	80007a4 <iprintf>
		pPortDOutreg->PIN_0 = 0;														// Clearing Out Pin 0
 80005b2:	e6e9      	b.n	8000388 <main+0xcc>
 80005b4:	08001674 	.word	0x08001674

080005b8 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005b8:	b580      	push	{r7, lr}
 80005ba:	b086      	sub	sp, #24
 80005bc:	af00      	add	r7, sp, #0
 80005be:	60f8      	str	r0, [r7, #12]
 80005c0:	60b9      	str	r1, [r7, #8]
 80005c2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005c4:	2300      	movs	r3, #0
 80005c6:	617b      	str	r3, [r7, #20]
 80005c8:	e00a      	b.n	80005e0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80005ca:	f3af 8000 	nop.w
 80005ce:	4601      	mov	r1, r0
 80005d0:	68bb      	ldr	r3, [r7, #8]
 80005d2:	1c5a      	adds	r2, r3, #1
 80005d4:	60ba      	str	r2, [r7, #8]
 80005d6:	b2ca      	uxtb	r2, r1
 80005d8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005da:	697b      	ldr	r3, [r7, #20]
 80005dc:	3301      	adds	r3, #1
 80005de:	617b      	str	r3, [r7, #20]
 80005e0:	697a      	ldr	r2, [r7, #20]
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	429a      	cmp	r2, r3
 80005e6:	dbf0      	blt.n	80005ca <_read+0x12>
	}

return len;
 80005e8:	687b      	ldr	r3, [r7, #4]
}
 80005ea:	4618      	mov	r0, r3
 80005ec:	3718      	adds	r7, #24
 80005ee:	46bd      	mov	sp, r7
 80005f0:	bd80      	pop	{r7, pc}

080005f2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80005f2:	b580      	push	{r7, lr}
 80005f4:	b086      	sub	sp, #24
 80005f6:	af00      	add	r7, sp, #0
 80005f8:	60f8      	str	r0, [r7, #12]
 80005fa:	60b9      	str	r1, [r7, #8]
 80005fc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005fe:	2300      	movs	r3, #0
 8000600:	617b      	str	r3, [r7, #20]
 8000602:	e009      	b.n	8000618 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000604:	68bb      	ldr	r3, [r7, #8]
 8000606:	1c5a      	adds	r2, r3, #1
 8000608:	60ba      	str	r2, [r7, #8]
 800060a:	781b      	ldrb	r3, [r3, #0]
 800060c:	4618      	mov	r0, r3
 800060e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000612:	697b      	ldr	r3, [r7, #20]
 8000614:	3301      	adds	r3, #1
 8000616:	617b      	str	r3, [r7, #20]
 8000618:	697a      	ldr	r2, [r7, #20]
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	429a      	cmp	r2, r3
 800061e:	dbf1      	blt.n	8000604 <_write+0x12>
	}
	return len;
 8000620:	687b      	ldr	r3, [r7, #4]
}
 8000622:	4618      	mov	r0, r3
 8000624:	3718      	adds	r7, #24
 8000626:	46bd      	mov	sp, r7
 8000628:	bd80      	pop	{r7, pc}

0800062a <_close>:

int _close(int file)
{
 800062a:	b480      	push	{r7}
 800062c:	b083      	sub	sp, #12
 800062e:	af00      	add	r7, sp, #0
 8000630:	6078      	str	r0, [r7, #4]
	return -1;
 8000632:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000636:	4618      	mov	r0, r3
 8000638:	370c      	adds	r7, #12
 800063a:	46bd      	mov	sp, r7
 800063c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000640:	4770      	bx	lr

08000642 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000642:	b480      	push	{r7}
 8000644:	b083      	sub	sp, #12
 8000646:	af00      	add	r7, sp, #0
 8000648:	6078      	str	r0, [r7, #4]
 800064a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800064c:	683b      	ldr	r3, [r7, #0]
 800064e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000652:	605a      	str	r2, [r3, #4]
	return 0;
 8000654:	2300      	movs	r3, #0
}
 8000656:	4618      	mov	r0, r3
 8000658:	370c      	adds	r7, #12
 800065a:	46bd      	mov	sp, r7
 800065c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000660:	4770      	bx	lr

08000662 <_isatty>:

int _isatty(int file)
{
 8000662:	b480      	push	{r7}
 8000664:	b083      	sub	sp, #12
 8000666:	af00      	add	r7, sp, #0
 8000668:	6078      	str	r0, [r7, #4]
	return 1;
 800066a:	2301      	movs	r3, #1
}
 800066c:	4618      	mov	r0, r3
 800066e:	370c      	adds	r7, #12
 8000670:	46bd      	mov	sp, r7
 8000672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000676:	4770      	bx	lr

08000678 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000678:	b480      	push	{r7}
 800067a:	b085      	sub	sp, #20
 800067c:	af00      	add	r7, sp, #0
 800067e:	60f8      	str	r0, [r7, #12]
 8000680:	60b9      	str	r1, [r7, #8]
 8000682:	607a      	str	r2, [r7, #4]
	return 0;
 8000684:	2300      	movs	r3, #0
}
 8000686:	4618      	mov	r0, r3
 8000688:	3714      	adds	r7, #20
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
	...

08000694 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	b084      	sub	sp, #16
 8000698:	af00      	add	r7, sp, #0
 800069a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800069c:	4b11      	ldr	r3, [pc, #68]	; (80006e4 <_sbrk+0x50>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d102      	bne.n	80006aa <_sbrk+0x16>
		heap_end = &end;
 80006a4:	4b0f      	ldr	r3, [pc, #60]	; (80006e4 <_sbrk+0x50>)
 80006a6:	4a10      	ldr	r2, [pc, #64]	; (80006e8 <_sbrk+0x54>)
 80006a8:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80006aa:	4b0e      	ldr	r3, [pc, #56]	; (80006e4 <_sbrk+0x50>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80006b0:	4b0c      	ldr	r3, [pc, #48]	; (80006e4 <_sbrk+0x50>)
 80006b2:	681a      	ldr	r2, [r3, #0]
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	4413      	add	r3, r2
 80006b8:	466a      	mov	r2, sp
 80006ba:	4293      	cmp	r3, r2
 80006bc:	d907      	bls.n	80006ce <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80006be:	f000 f83f 	bl	8000740 <__errno>
 80006c2:	4602      	mov	r2, r0
 80006c4:	230c      	movs	r3, #12
 80006c6:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80006c8:	f04f 33ff 	mov.w	r3, #4294967295
 80006cc:	e006      	b.n	80006dc <_sbrk+0x48>
	}

	heap_end += incr;
 80006ce:	4b05      	ldr	r3, [pc, #20]	; (80006e4 <_sbrk+0x50>)
 80006d0:	681a      	ldr	r2, [r3, #0]
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	4413      	add	r3, r2
 80006d6:	4a03      	ldr	r2, [pc, #12]	; (80006e4 <_sbrk+0x50>)
 80006d8:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80006da:	68fb      	ldr	r3, [r7, #12]
}
 80006dc:	4618      	mov	r0, r3
 80006de:	3710      	adds	r7, #16
 80006e0:	46bd      	mov	sp, r7
 80006e2:	bd80      	pop	{r7, pc}
 80006e4:	20000080 	.word	0x20000080
 80006e8:	20000090 	.word	0x20000090

080006ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ec:	480d      	ldr	r0, [pc, #52]	; (8000724 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ee:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006f0:	480d      	ldr	r0, [pc, #52]	; (8000728 <LoopForever+0x6>)
  ldr r1, =_edata
 80006f2:	490e      	ldr	r1, [pc, #56]	; (800072c <LoopForever+0xa>)
  ldr r2, =_sidata
 80006f4:	4a0e      	ldr	r2, [pc, #56]	; (8000730 <LoopForever+0xe>)
  movs r3, #0
 80006f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006f8:	e002      	b.n	8000700 <LoopCopyDataInit>

080006fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006fe:	3304      	adds	r3, #4

08000700 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000700:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000702:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000704:	d3f9      	bcc.n	80006fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000706:	4a0b      	ldr	r2, [pc, #44]	; (8000734 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000708:	4c0b      	ldr	r4, [pc, #44]	; (8000738 <LoopForever+0x16>)
  movs r3, #0
 800070a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800070c:	e001      	b.n	8000712 <LoopFillZerobss>

0800070e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800070e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000710:	3204      	adds	r2, #4

08000712 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000712:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000714:	d3fb      	bcc.n	800070e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000716:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800071a:	f000 f817 	bl	800074c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800071e:	f7ff fdcd 	bl	80002bc <main>

08000722 <LoopForever>:

LoopForever:
    b LoopForever
 8000722:	e7fe      	b.n	8000722 <LoopForever>
  ldr   r0, =_estack
 8000724:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000728:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800072c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000730:	08001724 	.word	0x08001724
  ldr r2, =_sbss
 8000734:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000738:	20000090 	.word	0x20000090

0800073c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800073c:	e7fe      	b.n	800073c <ADC_IRQHandler>
	...

08000740 <__errno>:
 8000740:	4b01      	ldr	r3, [pc, #4]	; (8000748 <__errno+0x8>)
 8000742:	6818      	ldr	r0, [r3, #0]
 8000744:	4770      	bx	lr
 8000746:	bf00      	nop
 8000748:	20000000 	.word	0x20000000

0800074c <__libc_init_array>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	4e0d      	ldr	r6, [pc, #52]	; (8000784 <__libc_init_array+0x38>)
 8000750:	4c0d      	ldr	r4, [pc, #52]	; (8000788 <__libc_init_array+0x3c>)
 8000752:	1ba4      	subs	r4, r4, r6
 8000754:	10a4      	asrs	r4, r4, #2
 8000756:	2500      	movs	r5, #0
 8000758:	42a5      	cmp	r5, r4
 800075a:	d109      	bne.n	8000770 <__libc_init_array+0x24>
 800075c:	4e0b      	ldr	r6, [pc, #44]	; (800078c <__libc_init_array+0x40>)
 800075e:	4c0c      	ldr	r4, [pc, #48]	; (8000790 <__libc_init_array+0x44>)
 8000760:	f000 ff04 	bl	800156c <_init>
 8000764:	1ba4      	subs	r4, r4, r6
 8000766:	10a4      	asrs	r4, r4, #2
 8000768:	2500      	movs	r5, #0
 800076a:	42a5      	cmp	r5, r4
 800076c:	d105      	bne.n	800077a <__libc_init_array+0x2e>
 800076e:	bd70      	pop	{r4, r5, r6, pc}
 8000770:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000774:	4798      	blx	r3
 8000776:	3501      	adds	r5, #1
 8000778:	e7ee      	b.n	8000758 <__libc_init_array+0xc>
 800077a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800077e:	4798      	blx	r3
 8000780:	3501      	adds	r5, #1
 8000782:	e7f2      	b.n	800076a <__libc_init_array+0x1e>
 8000784:	0800171c 	.word	0x0800171c
 8000788:	0800171c 	.word	0x0800171c
 800078c:	0800171c 	.word	0x0800171c
 8000790:	08001720 	.word	0x08001720

08000794 <memset>:
 8000794:	4402      	add	r2, r0
 8000796:	4603      	mov	r3, r0
 8000798:	4293      	cmp	r3, r2
 800079a:	d100      	bne.n	800079e <memset+0xa>
 800079c:	4770      	bx	lr
 800079e:	f803 1b01 	strb.w	r1, [r3], #1
 80007a2:	e7f9      	b.n	8000798 <memset+0x4>

080007a4 <iprintf>:
 80007a4:	b40f      	push	{r0, r1, r2, r3}
 80007a6:	4b0a      	ldr	r3, [pc, #40]	; (80007d0 <iprintf+0x2c>)
 80007a8:	b513      	push	{r0, r1, r4, lr}
 80007aa:	681c      	ldr	r4, [r3, #0]
 80007ac:	b124      	cbz	r4, 80007b8 <iprintf+0x14>
 80007ae:	69a3      	ldr	r3, [r4, #24]
 80007b0:	b913      	cbnz	r3, 80007b8 <iprintf+0x14>
 80007b2:	4620      	mov	r0, r4
 80007b4:	f000 f84e 	bl	8000854 <__sinit>
 80007b8:	ab05      	add	r3, sp, #20
 80007ba:	9a04      	ldr	r2, [sp, #16]
 80007bc:	68a1      	ldr	r1, [r4, #8]
 80007be:	9301      	str	r3, [sp, #4]
 80007c0:	4620      	mov	r0, r4
 80007c2:	f000 f955 	bl	8000a70 <_vfiprintf_r>
 80007c6:	b002      	add	sp, #8
 80007c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007cc:	b004      	add	sp, #16
 80007ce:	4770      	bx	lr
 80007d0:	20000000 	.word	0x20000000

080007d4 <std>:
 80007d4:	2300      	movs	r3, #0
 80007d6:	b510      	push	{r4, lr}
 80007d8:	4604      	mov	r4, r0
 80007da:	e9c0 3300 	strd	r3, r3, [r0]
 80007de:	6083      	str	r3, [r0, #8]
 80007e0:	8181      	strh	r1, [r0, #12]
 80007e2:	6643      	str	r3, [r0, #100]	; 0x64
 80007e4:	81c2      	strh	r2, [r0, #14]
 80007e6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007ea:	6183      	str	r3, [r0, #24]
 80007ec:	4619      	mov	r1, r3
 80007ee:	2208      	movs	r2, #8
 80007f0:	305c      	adds	r0, #92	; 0x5c
 80007f2:	f7ff ffcf 	bl	8000794 <memset>
 80007f6:	4b05      	ldr	r3, [pc, #20]	; (800080c <std+0x38>)
 80007f8:	6263      	str	r3, [r4, #36]	; 0x24
 80007fa:	4b05      	ldr	r3, [pc, #20]	; (8000810 <std+0x3c>)
 80007fc:	62a3      	str	r3, [r4, #40]	; 0x28
 80007fe:	4b05      	ldr	r3, [pc, #20]	; (8000814 <std+0x40>)
 8000800:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000802:	4b05      	ldr	r3, [pc, #20]	; (8000818 <std+0x44>)
 8000804:	6224      	str	r4, [r4, #32]
 8000806:	6323      	str	r3, [r4, #48]	; 0x30
 8000808:	bd10      	pop	{r4, pc}
 800080a:	bf00      	nop
 800080c:	08000fcd 	.word	0x08000fcd
 8000810:	08000fef 	.word	0x08000fef
 8000814:	08001027 	.word	0x08001027
 8000818:	0800104b 	.word	0x0800104b

0800081c <_cleanup_r>:
 800081c:	4901      	ldr	r1, [pc, #4]	; (8000824 <_cleanup_r+0x8>)
 800081e:	f000 b885 	b.w	800092c <_fwalk_reent>
 8000822:	bf00      	nop
 8000824:	08001325 	.word	0x08001325

08000828 <__sfmoreglue>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	1e4a      	subs	r2, r1, #1
 800082c:	2568      	movs	r5, #104	; 0x68
 800082e:	4355      	muls	r5, r2
 8000830:	460e      	mov	r6, r1
 8000832:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000836:	f000 f897 	bl	8000968 <_malloc_r>
 800083a:	4604      	mov	r4, r0
 800083c:	b140      	cbz	r0, 8000850 <__sfmoreglue+0x28>
 800083e:	2100      	movs	r1, #0
 8000840:	e9c0 1600 	strd	r1, r6, [r0]
 8000844:	300c      	adds	r0, #12
 8000846:	60a0      	str	r0, [r4, #8]
 8000848:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800084c:	f7ff ffa2 	bl	8000794 <memset>
 8000850:	4620      	mov	r0, r4
 8000852:	bd70      	pop	{r4, r5, r6, pc}

08000854 <__sinit>:
 8000854:	6983      	ldr	r3, [r0, #24]
 8000856:	b510      	push	{r4, lr}
 8000858:	4604      	mov	r4, r0
 800085a:	bb33      	cbnz	r3, 80008aa <__sinit+0x56>
 800085c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000860:	6503      	str	r3, [r0, #80]	; 0x50
 8000862:	4b12      	ldr	r3, [pc, #72]	; (80008ac <__sinit+0x58>)
 8000864:	4a12      	ldr	r2, [pc, #72]	; (80008b0 <__sinit+0x5c>)
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	6282      	str	r2, [r0, #40]	; 0x28
 800086a:	4298      	cmp	r0, r3
 800086c:	bf04      	itt	eq
 800086e:	2301      	moveq	r3, #1
 8000870:	6183      	streq	r3, [r0, #24]
 8000872:	f000 f81f 	bl	80008b4 <__sfp>
 8000876:	6060      	str	r0, [r4, #4]
 8000878:	4620      	mov	r0, r4
 800087a:	f000 f81b 	bl	80008b4 <__sfp>
 800087e:	60a0      	str	r0, [r4, #8]
 8000880:	4620      	mov	r0, r4
 8000882:	f000 f817 	bl	80008b4 <__sfp>
 8000886:	2200      	movs	r2, #0
 8000888:	60e0      	str	r0, [r4, #12]
 800088a:	2104      	movs	r1, #4
 800088c:	6860      	ldr	r0, [r4, #4]
 800088e:	f7ff ffa1 	bl	80007d4 <std>
 8000892:	2201      	movs	r2, #1
 8000894:	2109      	movs	r1, #9
 8000896:	68a0      	ldr	r0, [r4, #8]
 8000898:	f7ff ff9c 	bl	80007d4 <std>
 800089c:	2202      	movs	r2, #2
 800089e:	2112      	movs	r1, #18
 80008a0:	68e0      	ldr	r0, [r4, #12]
 80008a2:	f7ff ff97 	bl	80007d4 <std>
 80008a6:	2301      	movs	r3, #1
 80008a8:	61a3      	str	r3, [r4, #24]
 80008aa:	bd10      	pop	{r4, pc}
 80008ac:	08001684 	.word	0x08001684
 80008b0:	0800081d 	.word	0x0800081d

080008b4 <__sfp>:
 80008b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008b6:	4b1b      	ldr	r3, [pc, #108]	; (8000924 <__sfp+0x70>)
 80008b8:	681e      	ldr	r6, [r3, #0]
 80008ba:	69b3      	ldr	r3, [r6, #24]
 80008bc:	4607      	mov	r7, r0
 80008be:	b913      	cbnz	r3, 80008c6 <__sfp+0x12>
 80008c0:	4630      	mov	r0, r6
 80008c2:	f7ff ffc7 	bl	8000854 <__sinit>
 80008c6:	3648      	adds	r6, #72	; 0x48
 80008c8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008cc:	3b01      	subs	r3, #1
 80008ce:	d503      	bpl.n	80008d8 <__sfp+0x24>
 80008d0:	6833      	ldr	r3, [r6, #0]
 80008d2:	b133      	cbz	r3, 80008e2 <__sfp+0x2e>
 80008d4:	6836      	ldr	r6, [r6, #0]
 80008d6:	e7f7      	b.n	80008c8 <__sfp+0x14>
 80008d8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008dc:	b16d      	cbz	r5, 80008fa <__sfp+0x46>
 80008de:	3468      	adds	r4, #104	; 0x68
 80008e0:	e7f4      	b.n	80008cc <__sfp+0x18>
 80008e2:	2104      	movs	r1, #4
 80008e4:	4638      	mov	r0, r7
 80008e6:	f7ff ff9f 	bl	8000828 <__sfmoreglue>
 80008ea:	6030      	str	r0, [r6, #0]
 80008ec:	2800      	cmp	r0, #0
 80008ee:	d1f1      	bne.n	80008d4 <__sfp+0x20>
 80008f0:	230c      	movs	r3, #12
 80008f2:	603b      	str	r3, [r7, #0]
 80008f4:	4604      	mov	r4, r0
 80008f6:	4620      	mov	r0, r4
 80008f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008fa:	4b0b      	ldr	r3, [pc, #44]	; (8000928 <__sfp+0x74>)
 80008fc:	6665      	str	r5, [r4, #100]	; 0x64
 80008fe:	e9c4 5500 	strd	r5, r5, [r4]
 8000902:	60a5      	str	r5, [r4, #8]
 8000904:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000908:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800090c:	2208      	movs	r2, #8
 800090e:	4629      	mov	r1, r5
 8000910:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000914:	f7ff ff3e 	bl	8000794 <memset>
 8000918:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800091c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000920:	e7e9      	b.n	80008f6 <__sfp+0x42>
 8000922:	bf00      	nop
 8000924:	08001684 	.word	0x08001684
 8000928:	ffff0001 	.word	0xffff0001

0800092c <_fwalk_reent>:
 800092c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000930:	4680      	mov	r8, r0
 8000932:	4689      	mov	r9, r1
 8000934:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000938:	2600      	movs	r6, #0
 800093a:	b914      	cbnz	r4, 8000942 <_fwalk_reent+0x16>
 800093c:	4630      	mov	r0, r6
 800093e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000942:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000946:	3f01      	subs	r7, #1
 8000948:	d501      	bpl.n	800094e <_fwalk_reent+0x22>
 800094a:	6824      	ldr	r4, [r4, #0]
 800094c:	e7f5      	b.n	800093a <_fwalk_reent+0xe>
 800094e:	89ab      	ldrh	r3, [r5, #12]
 8000950:	2b01      	cmp	r3, #1
 8000952:	d907      	bls.n	8000964 <_fwalk_reent+0x38>
 8000954:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000958:	3301      	adds	r3, #1
 800095a:	d003      	beq.n	8000964 <_fwalk_reent+0x38>
 800095c:	4629      	mov	r1, r5
 800095e:	4640      	mov	r0, r8
 8000960:	47c8      	blx	r9
 8000962:	4306      	orrs	r6, r0
 8000964:	3568      	adds	r5, #104	; 0x68
 8000966:	e7ee      	b.n	8000946 <_fwalk_reent+0x1a>

08000968 <_malloc_r>:
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	1ccd      	adds	r5, r1, #3
 800096c:	f025 0503 	bic.w	r5, r5, #3
 8000970:	3508      	adds	r5, #8
 8000972:	2d0c      	cmp	r5, #12
 8000974:	bf38      	it	cc
 8000976:	250c      	movcc	r5, #12
 8000978:	2d00      	cmp	r5, #0
 800097a:	4606      	mov	r6, r0
 800097c:	db01      	blt.n	8000982 <_malloc_r+0x1a>
 800097e:	42a9      	cmp	r1, r5
 8000980:	d903      	bls.n	800098a <_malloc_r+0x22>
 8000982:	230c      	movs	r3, #12
 8000984:	6033      	str	r3, [r6, #0]
 8000986:	2000      	movs	r0, #0
 8000988:	bd70      	pop	{r4, r5, r6, pc}
 800098a:	f000 fd6b 	bl	8001464 <__malloc_lock>
 800098e:	4a21      	ldr	r2, [pc, #132]	; (8000a14 <_malloc_r+0xac>)
 8000990:	6814      	ldr	r4, [r2, #0]
 8000992:	4621      	mov	r1, r4
 8000994:	b991      	cbnz	r1, 80009bc <_malloc_r+0x54>
 8000996:	4c20      	ldr	r4, [pc, #128]	; (8000a18 <_malloc_r+0xb0>)
 8000998:	6823      	ldr	r3, [r4, #0]
 800099a:	b91b      	cbnz	r3, 80009a4 <_malloc_r+0x3c>
 800099c:	4630      	mov	r0, r6
 800099e:	f000 fb05 	bl	8000fac <_sbrk_r>
 80009a2:	6020      	str	r0, [r4, #0]
 80009a4:	4629      	mov	r1, r5
 80009a6:	4630      	mov	r0, r6
 80009a8:	f000 fb00 	bl	8000fac <_sbrk_r>
 80009ac:	1c43      	adds	r3, r0, #1
 80009ae:	d124      	bne.n	80009fa <_malloc_r+0x92>
 80009b0:	230c      	movs	r3, #12
 80009b2:	6033      	str	r3, [r6, #0]
 80009b4:	4630      	mov	r0, r6
 80009b6:	f000 fd56 	bl	8001466 <__malloc_unlock>
 80009ba:	e7e4      	b.n	8000986 <_malloc_r+0x1e>
 80009bc:	680b      	ldr	r3, [r1, #0]
 80009be:	1b5b      	subs	r3, r3, r5
 80009c0:	d418      	bmi.n	80009f4 <_malloc_r+0x8c>
 80009c2:	2b0b      	cmp	r3, #11
 80009c4:	d90f      	bls.n	80009e6 <_malloc_r+0x7e>
 80009c6:	600b      	str	r3, [r1, #0]
 80009c8:	50cd      	str	r5, [r1, r3]
 80009ca:	18cc      	adds	r4, r1, r3
 80009cc:	4630      	mov	r0, r6
 80009ce:	f000 fd4a 	bl	8001466 <__malloc_unlock>
 80009d2:	f104 000b 	add.w	r0, r4, #11
 80009d6:	1d23      	adds	r3, r4, #4
 80009d8:	f020 0007 	bic.w	r0, r0, #7
 80009dc:	1ac3      	subs	r3, r0, r3
 80009de:	d0d3      	beq.n	8000988 <_malloc_r+0x20>
 80009e0:	425a      	negs	r2, r3
 80009e2:	50e2      	str	r2, [r4, r3]
 80009e4:	e7d0      	b.n	8000988 <_malloc_r+0x20>
 80009e6:	428c      	cmp	r4, r1
 80009e8:	684b      	ldr	r3, [r1, #4]
 80009ea:	bf16      	itet	ne
 80009ec:	6063      	strne	r3, [r4, #4]
 80009ee:	6013      	streq	r3, [r2, #0]
 80009f0:	460c      	movne	r4, r1
 80009f2:	e7eb      	b.n	80009cc <_malloc_r+0x64>
 80009f4:	460c      	mov	r4, r1
 80009f6:	6849      	ldr	r1, [r1, #4]
 80009f8:	e7cc      	b.n	8000994 <_malloc_r+0x2c>
 80009fa:	1cc4      	adds	r4, r0, #3
 80009fc:	f024 0403 	bic.w	r4, r4, #3
 8000a00:	42a0      	cmp	r0, r4
 8000a02:	d005      	beq.n	8000a10 <_malloc_r+0xa8>
 8000a04:	1a21      	subs	r1, r4, r0
 8000a06:	4630      	mov	r0, r6
 8000a08:	f000 fad0 	bl	8000fac <_sbrk_r>
 8000a0c:	3001      	adds	r0, #1
 8000a0e:	d0cf      	beq.n	80009b0 <_malloc_r+0x48>
 8000a10:	6025      	str	r5, [r4, #0]
 8000a12:	e7db      	b.n	80009cc <_malloc_r+0x64>
 8000a14:	20000084 	.word	0x20000084
 8000a18:	20000088 	.word	0x20000088

08000a1c <__sfputc_r>:
 8000a1c:	6893      	ldr	r3, [r2, #8]
 8000a1e:	3b01      	subs	r3, #1
 8000a20:	2b00      	cmp	r3, #0
 8000a22:	b410      	push	{r4}
 8000a24:	6093      	str	r3, [r2, #8]
 8000a26:	da08      	bge.n	8000a3a <__sfputc_r+0x1e>
 8000a28:	6994      	ldr	r4, [r2, #24]
 8000a2a:	42a3      	cmp	r3, r4
 8000a2c:	db01      	blt.n	8000a32 <__sfputc_r+0x16>
 8000a2e:	290a      	cmp	r1, #10
 8000a30:	d103      	bne.n	8000a3a <__sfputc_r+0x1e>
 8000a32:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a36:	f000 bb0d 	b.w	8001054 <__swbuf_r>
 8000a3a:	6813      	ldr	r3, [r2, #0]
 8000a3c:	1c58      	adds	r0, r3, #1
 8000a3e:	6010      	str	r0, [r2, #0]
 8000a40:	7019      	strb	r1, [r3, #0]
 8000a42:	4608      	mov	r0, r1
 8000a44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a48:	4770      	bx	lr

08000a4a <__sfputs_r>:
 8000a4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a4c:	4606      	mov	r6, r0
 8000a4e:	460f      	mov	r7, r1
 8000a50:	4614      	mov	r4, r2
 8000a52:	18d5      	adds	r5, r2, r3
 8000a54:	42ac      	cmp	r4, r5
 8000a56:	d101      	bne.n	8000a5c <__sfputs_r+0x12>
 8000a58:	2000      	movs	r0, #0
 8000a5a:	e007      	b.n	8000a6c <__sfputs_r+0x22>
 8000a5c:	463a      	mov	r2, r7
 8000a5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a62:	4630      	mov	r0, r6
 8000a64:	f7ff ffda 	bl	8000a1c <__sfputc_r>
 8000a68:	1c43      	adds	r3, r0, #1
 8000a6a:	d1f3      	bne.n	8000a54 <__sfputs_r+0xa>
 8000a6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a70 <_vfiprintf_r>:
 8000a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a74:	460c      	mov	r4, r1
 8000a76:	b09d      	sub	sp, #116	; 0x74
 8000a78:	4617      	mov	r7, r2
 8000a7a:	461d      	mov	r5, r3
 8000a7c:	4606      	mov	r6, r0
 8000a7e:	b118      	cbz	r0, 8000a88 <_vfiprintf_r+0x18>
 8000a80:	6983      	ldr	r3, [r0, #24]
 8000a82:	b90b      	cbnz	r3, 8000a88 <_vfiprintf_r+0x18>
 8000a84:	f7ff fee6 	bl	8000854 <__sinit>
 8000a88:	4b7c      	ldr	r3, [pc, #496]	; (8000c7c <_vfiprintf_r+0x20c>)
 8000a8a:	429c      	cmp	r4, r3
 8000a8c:	d158      	bne.n	8000b40 <_vfiprintf_r+0xd0>
 8000a8e:	6874      	ldr	r4, [r6, #4]
 8000a90:	89a3      	ldrh	r3, [r4, #12]
 8000a92:	0718      	lsls	r0, r3, #28
 8000a94:	d55e      	bpl.n	8000b54 <_vfiprintf_r+0xe4>
 8000a96:	6923      	ldr	r3, [r4, #16]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d05b      	beq.n	8000b54 <_vfiprintf_r+0xe4>
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	9309      	str	r3, [sp, #36]	; 0x24
 8000aa0:	2320      	movs	r3, #32
 8000aa2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000aa6:	2330      	movs	r3, #48	; 0x30
 8000aa8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000aac:	9503      	str	r5, [sp, #12]
 8000aae:	f04f 0b01 	mov.w	fp, #1
 8000ab2:	46b8      	mov	r8, r7
 8000ab4:	4645      	mov	r5, r8
 8000ab6:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000aba:	b10b      	cbz	r3, 8000ac0 <_vfiprintf_r+0x50>
 8000abc:	2b25      	cmp	r3, #37	; 0x25
 8000abe:	d154      	bne.n	8000b6a <_vfiprintf_r+0xfa>
 8000ac0:	ebb8 0a07 	subs.w	sl, r8, r7
 8000ac4:	d00b      	beq.n	8000ade <_vfiprintf_r+0x6e>
 8000ac6:	4653      	mov	r3, sl
 8000ac8:	463a      	mov	r2, r7
 8000aca:	4621      	mov	r1, r4
 8000acc:	4630      	mov	r0, r6
 8000ace:	f7ff ffbc 	bl	8000a4a <__sfputs_r>
 8000ad2:	3001      	adds	r0, #1
 8000ad4:	f000 80c2 	beq.w	8000c5c <_vfiprintf_r+0x1ec>
 8000ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ada:	4453      	add	r3, sl
 8000adc:	9309      	str	r3, [sp, #36]	; 0x24
 8000ade:	f898 3000 	ldrb.w	r3, [r8]
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	f000 80ba 	beq.w	8000c5c <_vfiprintf_r+0x1ec>
 8000ae8:	2300      	movs	r3, #0
 8000aea:	f04f 32ff 	mov.w	r2, #4294967295
 8000aee:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000af2:	9304      	str	r3, [sp, #16]
 8000af4:	9307      	str	r3, [sp, #28]
 8000af6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000afa:	931a      	str	r3, [sp, #104]	; 0x68
 8000afc:	46a8      	mov	r8, r5
 8000afe:	2205      	movs	r2, #5
 8000b00:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000b04:	485e      	ldr	r0, [pc, #376]	; (8000c80 <_vfiprintf_r+0x210>)
 8000b06:	f7ff fb73 	bl	80001f0 <memchr>
 8000b0a:	9b04      	ldr	r3, [sp, #16]
 8000b0c:	bb78      	cbnz	r0, 8000b6e <_vfiprintf_r+0xfe>
 8000b0e:	06d9      	lsls	r1, r3, #27
 8000b10:	bf44      	itt	mi
 8000b12:	2220      	movmi	r2, #32
 8000b14:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000b18:	071a      	lsls	r2, r3, #28
 8000b1a:	bf44      	itt	mi
 8000b1c:	222b      	movmi	r2, #43	; 0x2b
 8000b1e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000b22:	782a      	ldrb	r2, [r5, #0]
 8000b24:	2a2a      	cmp	r2, #42	; 0x2a
 8000b26:	d02a      	beq.n	8000b7e <_vfiprintf_r+0x10e>
 8000b28:	9a07      	ldr	r2, [sp, #28]
 8000b2a:	46a8      	mov	r8, r5
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	250a      	movs	r5, #10
 8000b30:	4641      	mov	r1, r8
 8000b32:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b36:	3b30      	subs	r3, #48	; 0x30
 8000b38:	2b09      	cmp	r3, #9
 8000b3a:	d969      	bls.n	8000c10 <_vfiprintf_r+0x1a0>
 8000b3c:	b360      	cbz	r0, 8000b98 <_vfiprintf_r+0x128>
 8000b3e:	e024      	b.n	8000b8a <_vfiprintf_r+0x11a>
 8000b40:	4b50      	ldr	r3, [pc, #320]	; (8000c84 <_vfiprintf_r+0x214>)
 8000b42:	429c      	cmp	r4, r3
 8000b44:	d101      	bne.n	8000b4a <_vfiprintf_r+0xda>
 8000b46:	68b4      	ldr	r4, [r6, #8]
 8000b48:	e7a2      	b.n	8000a90 <_vfiprintf_r+0x20>
 8000b4a:	4b4f      	ldr	r3, [pc, #316]	; (8000c88 <_vfiprintf_r+0x218>)
 8000b4c:	429c      	cmp	r4, r3
 8000b4e:	bf08      	it	eq
 8000b50:	68f4      	ldreq	r4, [r6, #12]
 8000b52:	e79d      	b.n	8000a90 <_vfiprintf_r+0x20>
 8000b54:	4621      	mov	r1, r4
 8000b56:	4630      	mov	r0, r6
 8000b58:	f000 fae0 	bl	800111c <__swsetup_r>
 8000b5c:	2800      	cmp	r0, #0
 8000b5e:	d09d      	beq.n	8000a9c <_vfiprintf_r+0x2c>
 8000b60:	f04f 30ff 	mov.w	r0, #4294967295
 8000b64:	b01d      	add	sp, #116	; 0x74
 8000b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b6a:	46a8      	mov	r8, r5
 8000b6c:	e7a2      	b.n	8000ab4 <_vfiprintf_r+0x44>
 8000b6e:	4a44      	ldr	r2, [pc, #272]	; (8000c80 <_vfiprintf_r+0x210>)
 8000b70:	1a80      	subs	r0, r0, r2
 8000b72:	fa0b f000 	lsl.w	r0, fp, r0
 8000b76:	4318      	orrs	r0, r3
 8000b78:	9004      	str	r0, [sp, #16]
 8000b7a:	4645      	mov	r5, r8
 8000b7c:	e7be      	b.n	8000afc <_vfiprintf_r+0x8c>
 8000b7e:	9a03      	ldr	r2, [sp, #12]
 8000b80:	1d11      	adds	r1, r2, #4
 8000b82:	6812      	ldr	r2, [r2, #0]
 8000b84:	9103      	str	r1, [sp, #12]
 8000b86:	2a00      	cmp	r2, #0
 8000b88:	db01      	blt.n	8000b8e <_vfiprintf_r+0x11e>
 8000b8a:	9207      	str	r2, [sp, #28]
 8000b8c:	e004      	b.n	8000b98 <_vfiprintf_r+0x128>
 8000b8e:	4252      	negs	r2, r2
 8000b90:	f043 0302 	orr.w	r3, r3, #2
 8000b94:	9207      	str	r2, [sp, #28]
 8000b96:	9304      	str	r3, [sp, #16]
 8000b98:	f898 3000 	ldrb.w	r3, [r8]
 8000b9c:	2b2e      	cmp	r3, #46	; 0x2e
 8000b9e:	d10e      	bne.n	8000bbe <_vfiprintf_r+0x14e>
 8000ba0:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000ba4:	2b2a      	cmp	r3, #42	; 0x2a
 8000ba6:	d138      	bne.n	8000c1a <_vfiprintf_r+0x1aa>
 8000ba8:	9b03      	ldr	r3, [sp, #12]
 8000baa:	1d1a      	adds	r2, r3, #4
 8000bac:	681b      	ldr	r3, [r3, #0]
 8000bae:	9203      	str	r2, [sp, #12]
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	bfb8      	it	lt
 8000bb4:	f04f 33ff 	movlt.w	r3, #4294967295
 8000bb8:	f108 0802 	add.w	r8, r8, #2
 8000bbc:	9305      	str	r3, [sp, #20]
 8000bbe:	4d33      	ldr	r5, [pc, #204]	; (8000c8c <_vfiprintf_r+0x21c>)
 8000bc0:	f898 1000 	ldrb.w	r1, [r8]
 8000bc4:	2203      	movs	r2, #3
 8000bc6:	4628      	mov	r0, r5
 8000bc8:	f7ff fb12 	bl	80001f0 <memchr>
 8000bcc:	b140      	cbz	r0, 8000be0 <_vfiprintf_r+0x170>
 8000bce:	2340      	movs	r3, #64	; 0x40
 8000bd0:	1b40      	subs	r0, r0, r5
 8000bd2:	fa03 f000 	lsl.w	r0, r3, r0
 8000bd6:	9b04      	ldr	r3, [sp, #16]
 8000bd8:	4303      	orrs	r3, r0
 8000bda:	f108 0801 	add.w	r8, r8, #1
 8000bde:	9304      	str	r3, [sp, #16]
 8000be0:	f898 1000 	ldrb.w	r1, [r8]
 8000be4:	482a      	ldr	r0, [pc, #168]	; (8000c90 <_vfiprintf_r+0x220>)
 8000be6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bea:	2206      	movs	r2, #6
 8000bec:	f108 0701 	add.w	r7, r8, #1
 8000bf0:	f7ff fafe 	bl	80001f0 <memchr>
 8000bf4:	2800      	cmp	r0, #0
 8000bf6:	d037      	beq.n	8000c68 <_vfiprintf_r+0x1f8>
 8000bf8:	4b26      	ldr	r3, [pc, #152]	; (8000c94 <_vfiprintf_r+0x224>)
 8000bfa:	bb1b      	cbnz	r3, 8000c44 <_vfiprintf_r+0x1d4>
 8000bfc:	9b03      	ldr	r3, [sp, #12]
 8000bfe:	3307      	adds	r3, #7
 8000c00:	f023 0307 	bic.w	r3, r3, #7
 8000c04:	3308      	adds	r3, #8
 8000c06:	9303      	str	r3, [sp, #12]
 8000c08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c0a:	444b      	add	r3, r9
 8000c0c:	9309      	str	r3, [sp, #36]	; 0x24
 8000c0e:	e750      	b.n	8000ab2 <_vfiprintf_r+0x42>
 8000c10:	fb05 3202 	mla	r2, r5, r2, r3
 8000c14:	2001      	movs	r0, #1
 8000c16:	4688      	mov	r8, r1
 8000c18:	e78a      	b.n	8000b30 <_vfiprintf_r+0xc0>
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	f108 0801 	add.w	r8, r8, #1
 8000c20:	9305      	str	r3, [sp, #20]
 8000c22:	4619      	mov	r1, r3
 8000c24:	250a      	movs	r5, #10
 8000c26:	4640      	mov	r0, r8
 8000c28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c2c:	3a30      	subs	r2, #48	; 0x30
 8000c2e:	2a09      	cmp	r2, #9
 8000c30:	d903      	bls.n	8000c3a <_vfiprintf_r+0x1ca>
 8000c32:	2b00      	cmp	r3, #0
 8000c34:	d0c3      	beq.n	8000bbe <_vfiprintf_r+0x14e>
 8000c36:	9105      	str	r1, [sp, #20]
 8000c38:	e7c1      	b.n	8000bbe <_vfiprintf_r+0x14e>
 8000c3a:	fb05 2101 	mla	r1, r5, r1, r2
 8000c3e:	2301      	movs	r3, #1
 8000c40:	4680      	mov	r8, r0
 8000c42:	e7f0      	b.n	8000c26 <_vfiprintf_r+0x1b6>
 8000c44:	ab03      	add	r3, sp, #12
 8000c46:	9300      	str	r3, [sp, #0]
 8000c48:	4622      	mov	r2, r4
 8000c4a:	4b13      	ldr	r3, [pc, #76]	; (8000c98 <_vfiprintf_r+0x228>)
 8000c4c:	a904      	add	r1, sp, #16
 8000c4e:	4630      	mov	r0, r6
 8000c50:	f3af 8000 	nop.w
 8000c54:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000c58:	4681      	mov	r9, r0
 8000c5a:	d1d5      	bne.n	8000c08 <_vfiprintf_r+0x198>
 8000c5c:	89a3      	ldrh	r3, [r4, #12]
 8000c5e:	065b      	lsls	r3, r3, #25
 8000c60:	f53f af7e 	bmi.w	8000b60 <_vfiprintf_r+0xf0>
 8000c64:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c66:	e77d      	b.n	8000b64 <_vfiprintf_r+0xf4>
 8000c68:	ab03      	add	r3, sp, #12
 8000c6a:	9300      	str	r3, [sp, #0]
 8000c6c:	4622      	mov	r2, r4
 8000c6e:	4b0a      	ldr	r3, [pc, #40]	; (8000c98 <_vfiprintf_r+0x228>)
 8000c70:	a904      	add	r1, sp, #16
 8000c72:	4630      	mov	r0, r6
 8000c74:	f000 f888 	bl	8000d88 <_printf_i>
 8000c78:	e7ec      	b.n	8000c54 <_vfiprintf_r+0x1e4>
 8000c7a:	bf00      	nop
 8000c7c:	080016a8 	.word	0x080016a8
 8000c80:	080016e8 	.word	0x080016e8
 8000c84:	080016c8 	.word	0x080016c8
 8000c88:	08001688 	.word	0x08001688
 8000c8c:	080016ee 	.word	0x080016ee
 8000c90:	080016f2 	.word	0x080016f2
 8000c94:	00000000 	.word	0x00000000
 8000c98:	08000a4b 	.word	0x08000a4b

08000c9c <_printf_common>:
 8000c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca0:	4691      	mov	r9, r2
 8000ca2:	461f      	mov	r7, r3
 8000ca4:	688a      	ldr	r2, [r1, #8]
 8000ca6:	690b      	ldr	r3, [r1, #16]
 8000ca8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000cac:	4293      	cmp	r3, r2
 8000cae:	bfb8      	it	lt
 8000cb0:	4613      	movlt	r3, r2
 8000cb2:	f8c9 3000 	str.w	r3, [r9]
 8000cb6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000cba:	4606      	mov	r6, r0
 8000cbc:	460c      	mov	r4, r1
 8000cbe:	b112      	cbz	r2, 8000cc6 <_printf_common+0x2a>
 8000cc0:	3301      	adds	r3, #1
 8000cc2:	f8c9 3000 	str.w	r3, [r9]
 8000cc6:	6823      	ldr	r3, [r4, #0]
 8000cc8:	0699      	lsls	r1, r3, #26
 8000cca:	bf42      	ittt	mi
 8000ccc:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000cd0:	3302      	addmi	r3, #2
 8000cd2:	f8c9 3000 	strmi.w	r3, [r9]
 8000cd6:	6825      	ldr	r5, [r4, #0]
 8000cd8:	f015 0506 	ands.w	r5, r5, #6
 8000cdc:	d107      	bne.n	8000cee <_printf_common+0x52>
 8000cde:	f104 0a19 	add.w	sl, r4, #25
 8000ce2:	68e3      	ldr	r3, [r4, #12]
 8000ce4:	f8d9 2000 	ldr.w	r2, [r9]
 8000ce8:	1a9b      	subs	r3, r3, r2
 8000cea:	42ab      	cmp	r3, r5
 8000cec:	dc28      	bgt.n	8000d40 <_printf_common+0xa4>
 8000cee:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000cf2:	6822      	ldr	r2, [r4, #0]
 8000cf4:	3300      	adds	r3, #0
 8000cf6:	bf18      	it	ne
 8000cf8:	2301      	movne	r3, #1
 8000cfa:	0692      	lsls	r2, r2, #26
 8000cfc:	d42d      	bmi.n	8000d5a <_printf_common+0xbe>
 8000cfe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d02:	4639      	mov	r1, r7
 8000d04:	4630      	mov	r0, r6
 8000d06:	47c0      	blx	r8
 8000d08:	3001      	adds	r0, #1
 8000d0a:	d020      	beq.n	8000d4e <_printf_common+0xb2>
 8000d0c:	6823      	ldr	r3, [r4, #0]
 8000d0e:	68e5      	ldr	r5, [r4, #12]
 8000d10:	f8d9 2000 	ldr.w	r2, [r9]
 8000d14:	f003 0306 	and.w	r3, r3, #6
 8000d18:	2b04      	cmp	r3, #4
 8000d1a:	bf08      	it	eq
 8000d1c:	1aad      	subeq	r5, r5, r2
 8000d1e:	68a3      	ldr	r3, [r4, #8]
 8000d20:	6922      	ldr	r2, [r4, #16]
 8000d22:	bf0c      	ite	eq
 8000d24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d28:	2500      	movne	r5, #0
 8000d2a:	4293      	cmp	r3, r2
 8000d2c:	bfc4      	itt	gt
 8000d2e:	1a9b      	subgt	r3, r3, r2
 8000d30:	18ed      	addgt	r5, r5, r3
 8000d32:	f04f 0900 	mov.w	r9, #0
 8000d36:	341a      	adds	r4, #26
 8000d38:	454d      	cmp	r5, r9
 8000d3a:	d11a      	bne.n	8000d72 <_printf_common+0xd6>
 8000d3c:	2000      	movs	r0, #0
 8000d3e:	e008      	b.n	8000d52 <_printf_common+0xb6>
 8000d40:	2301      	movs	r3, #1
 8000d42:	4652      	mov	r2, sl
 8000d44:	4639      	mov	r1, r7
 8000d46:	4630      	mov	r0, r6
 8000d48:	47c0      	blx	r8
 8000d4a:	3001      	adds	r0, #1
 8000d4c:	d103      	bne.n	8000d56 <_printf_common+0xba>
 8000d4e:	f04f 30ff 	mov.w	r0, #4294967295
 8000d52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d56:	3501      	adds	r5, #1
 8000d58:	e7c3      	b.n	8000ce2 <_printf_common+0x46>
 8000d5a:	18e1      	adds	r1, r4, r3
 8000d5c:	1c5a      	adds	r2, r3, #1
 8000d5e:	2030      	movs	r0, #48	; 0x30
 8000d60:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d64:	4422      	add	r2, r4
 8000d66:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d6a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d6e:	3302      	adds	r3, #2
 8000d70:	e7c5      	b.n	8000cfe <_printf_common+0x62>
 8000d72:	2301      	movs	r3, #1
 8000d74:	4622      	mov	r2, r4
 8000d76:	4639      	mov	r1, r7
 8000d78:	4630      	mov	r0, r6
 8000d7a:	47c0      	blx	r8
 8000d7c:	3001      	adds	r0, #1
 8000d7e:	d0e6      	beq.n	8000d4e <_printf_common+0xb2>
 8000d80:	f109 0901 	add.w	r9, r9, #1
 8000d84:	e7d8      	b.n	8000d38 <_printf_common+0x9c>
	...

08000d88 <_printf_i>:
 8000d88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000d8c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000d90:	460c      	mov	r4, r1
 8000d92:	7e09      	ldrb	r1, [r1, #24]
 8000d94:	b085      	sub	sp, #20
 8000d96:	296e      	cmp	r1, #110	; 0x6e
 8000d98:	4617      	mov	r7, r2
 8000d9a:	4606      	mov	r6, r0
 8000d9c:	4698      	mov	r8, r3
 8000d9e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000da0:	f000 80b3 	beq.w	8000f0a <_printf_i+0x182>
 8000da4:	d822      	bhi.n	8000dec <_printf_i+0x64>
 8000da6:	2963      	cmp	r1, #99	; 0x63
 8000da8:	d036      	beq.n	8000e18 <_printf_i+0x90>
 8000daa:	d80a      	bhi.n	8000dc2 <_printf_i+0x3a>
 8000dac:	2900      	cmp	r1, #0
 8000dae:	f000 80b9 	beq.w	8000f24 <_printf_i+0x19c>
 8000db2:	2958      	cmp	r1, #88	; 0x58
 8000db4:	f000 8083 	beq.w	8000ebe <_printf_i+0x136>
 8000db8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000dbc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000dc0:	e032      	b.n	8000e28 <_printf_i+0xa0>
 8000dc2:	2964      	cmp	r1, #100	; 0x64
 8000dc4:	d001      	beq.n	8000dca <_printf_i+0x42>
 8000dc6:	2969      	cmp	r1, #105	; 0x69
 8000dc8:	d1f6      	bne.n	8000db8 <_printf_i+0x30>
 8000dca:	6820      	ldr	r0, [r4, #0]
 8000dcc:	6813      	ldr	r3, [r2, #0]
 8000dce:	0605      	lsls	r5, r0, #24
 8000dd0:	f103 0104 	add.w	r1, r3, #4
 8000dd4:	d52a      	bpl.n	8000e2c <_printf_i+0xa4>
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	6011      	str	r1, [r2, #0]
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	da03      	bge.n	8000de6 <_printf_i+0x5e>
 8000dde:	222d      	movs	r2, #45	; 0x2d
 8000de0:	425b      	negs	r3, r3
 8000de2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000de6:	486f      	ldr	r0, [pc, #444]	; (8000fa4 <_printf_i+0x21c>)
 8000de8:	220a      	movs	r2, #10
 8000dea:	e039      	b.n	8000e60 <_printf_i+0xd8>
 8000dec:	2973      	cmp	r1, #115	; 0x73
 8000dee:	f000 809d 	beq.w	8000f2c <_printf_i+0x1a4>
 8000df2:	d808      	bhi.n	8000e06 <_printf_i+0x7e>
 8000df4:	296f      	cmp	r1, #111	; 0x6f
 8000df6:	d020      	beq.n	8000e3a <_printf_i+0xb2>
 8000df8:	2970      	cmp	r1, #112	; 0x70
 8000dfa:	d1dd      	bne.n	8000db8 <_printf_i+0x30>
 8000dfc:	6823      	ldr	r3, [r4, #0]
 8000dfe:	f043 0320 	orr.w	r3, r3, #32
 8000e02:	6023      	str	r3, [r4, #0]
 8000e04:	e003      	b.n	8000e0e <_printf_i+0x86>
 8000e06:	2975      	cmp	r1, #117	; 0x75
 8000e08:	d017      	beq.n	8000e3a <_printf_i+0xb2>
 8000e0a:	2978      	cmp	r1, #120	; 0x78
 8000e0c:	d1d4      	bne.n	8000db8 <_printf_i+0x30>
 8000e0e:	2378      	movs	r3, #120	; 0x78
 8000e10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e14:	4864      	ldr	r0, [pc, #400]	; (8000fa8 <_printf_i+0x220>)
 8000e16:	e055      	b.n	8000ec4 <_printf_i+0x13c>
 8000e18:	6813      	ldr	r3, [r2, #0]
 8000e1a:	1d19      	adds	r1, r3, #4
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	6011      	str	r1, [r2, #0]
 8000e20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e24:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e28:	2301      	movs	r3, #1
 8000e2a:	e08c      	b.n	8000f46 <_printf_i+0x1be>
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	6011      	str	r1, [r2, #0]
 8000e30:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e34:	bf18      	it	ne
 8000e36:	b21b      	sxthne	r3, r3
 8000e38:	e7cf      	b.n	8000dda <_printf_i+0x52>
 8000e3a:	6813      	ldr	r3, [r2, #0]
 8000e3c:	6825      	ldr	r5, [r4, #0]
 8000e3e:	1d18      	adds	r0, r3, #4
 8000e40:	6010      	str	r0, [r2, #0]
 8000e42:	0628      	lsls	r0, r5, #24
 8000e44:	d501      	bpl.n	8000e4a <_printf_i+0xc2>
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	e002      	b.n	8000e50 <_printf_i+0xc8>
 8000e4a:	0668      	lsls	r0, r5, #25
 8000e4c:	d5fb      	bpl.n	8000e46 <_printf_i+0xbe>
 8000e4e:	881b      	ldrh	r3, [r3, #0]
 8000e50:	4854      	ldr	r0, [pc, #336]	; (8000fa4 <_printf_i+0x21c>)
 8000e52:	296f      	cmp	r1, #111	; 0x6f
 8000e54:	bf14      	ite	ne
 8000e56:	220a      	movne	r2, #10
 8000e58:	2208      	moveq	r2, #8
 8000e5a:	2100      	movs	r1, #0
 8000e5c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e60:	6865      	ldr	r5, [r4, #4]
 8000e62:	60a5      	str	r5, [r4, #8]
 8000e64:	2d00      	cmp	r5, #0
 8000e66:	f2c0 8095 	blt.w	8000f94 <_printf_i+0x20c>
 8000e6a:	6821      	ldr	r1, [r4, #0]
 8000e6c:	f021 0104 	bic.w	r1, r1, #4
 8000e70:	6021      	str	r1, [r4, #0]
 8000e72:	2b00      	cmp	r3, #0
 8000e74:	d13d      	bne.n	8000ef2 <_printf_i+0x16a>
 8000e76:	2d00      	cmp	r5, #0
 8000e78:	f040 808e 	bne.w	8000f98 <_printf_i+0x210>
 8000e7c:	4665      	mov	r5, ip
 8000e7e:	2a08      	cmp	r2, #8
 8000e80:	d10b      	bne.n	8000e9a <_printf_i+0x112>
 8000e82:	6823      	ldr	r3, [r4, #0]
 8000e84:	07db      	lsls	r3, r3, #31
 8000e86:	d508      	bpl.n	8000e9a <_printf_i+0x112>
 8000e88:	6923      	ldr	r3, [r4, #16]
 8000e8a:	6862      	ldr	r2, [r4, #4]
 8000e8c:	429a      	cmp	r2, r3
 8000e8e:	bfde      	ittt	le
 8000e90:	2330      	movle	r3, #48	; 0x30
 8000e92:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e96:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e9a:	ebac 0305 	sub.w	r3, ip, r5
 8000e9e:	6123      	str	r3, [r4, #16]
 8000ea0:	f8cd 8000 	str.w	r8, [sp]
 8000ea4:	463b      	mov	r3, r7
 8000ea6:	aa03      	add	r2, sp, #12
 8000ea8:	4621      	mov	r1, r4
 8000eaa:	4630      	mov	r0, r6
 8000eac:	f7ff fef6 	bl	8000c9c <_printf_common>
 8000eb0:	3001      	adds	r0, #1
 8000eb2:	d14d      	bne.n	8000f50 <_printf_i+0x1c8>
 8000eb4:	f04f 30ff 	mov.w	r0, #4294967295
 8000eb8:	b005      	add	sp, #20
 8000eba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000ebe:	4839      	ldr	r0, [pc, #228]	; (8000fa4 <_printf_i+0x21c>)
 8000ec0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000ec4:	6813      	ldr	r3, [r2, #0]
 8000ec6:	6821      	ldr	r1, [r4, #0]
 8000ec8:	1d1d      	adds	r5, r3, #4
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	6015      	str	r5, [r2, #0]
 8000ece:	060a      	lsls	r2, r1, #24
 8000ed0:	d50b      	bpl.n	8000eea <_printf_i+0x162>
 8000ed2:	07ca      	lsls	r2, r1, #31
 8000ed4:	bf44      	itt	mi
 8000ed6:	f041 0120 	orrmi.w	r1, r1, #32
 8000eda:	6021      	strmi	r1, [r4, #0]
 8000edc:	b91b      	cbnz	r3, 8000ee6 <_printf_i+0x15e>
 8000ede:	6822      	ldr	r2, [r4, #0]
 8000ee0:	f022 0220 	bic.w	r2, r2, #32
 8000ee4:	6022      	str	r2, [r4, #0]
 8000ee6:	2210      	movs	r2, #16
 8000ee8:	e7b7      	b.n	8000e5a <_printf_i+0xd2>
 8000eea:	064d      	lsls	r5, r1, #25
 8000eec:	bf48      	it	mi
 8000eee:	b29b      	uxthmi	r3, r3
 8000ef0:	e7ef      	b.n	8000ed2 <_printf_i+0x14a>
 8000ef2:	4665      	mov	r5, ip
 8000ef4:	fbb3 f1f2 	udiv	r1, r3, r2
 8000ef8:	fb02 3311 	mls	r3, r2, r1, r3
 8000efc:	5cc3      	ldrb	r3, [r0, r3]
 8000efe:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000f02:	460b      	mov	r3, r1
 8000f04:	2900      	cmp	r1, #0
 8000f06:	d1f5      	bne.n	8000ef4 <_printf_i+0x16c>
 8000f08:	e7b9      	b.n	8000e7e <_printf_i+0xf6>
 8000f0a:	6813      	ldr	r3, [r2, #0]
 8000f0c:	6825      	ldr	r5, [r4, #0]
 8000f0e:	6961      	ldr	r1, [r4, #20]
 8000f10:	1d18      	adds	r0, r3, #4
 8000f12:	6010      	str	r0, [r2, #0]
 8000f14:	0628      	lsls	r0, r5, #24
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	d501      	bpl.n	8000f1e <_printf_i+0x196>
 8000f1a:	6019      	str	r1, [r3, #0]
 8000f1c:	e002      	b.n	8000f24 <_printf_i+0x19c>
 8000f1e:	066a      	lsls	r2, r5, #25
 8000f20:	d5fb      	bpl.n	8000f1a <_printf_i+0x192>
 8000f22:	8019      	strh	r1, [r3, #0]
 8000f24:	2300      	movs	r3, #0
 8000f26:	6123      	str	r3, [r4, #16]
 8000f28:	4665      	mov	r5, ip
 8000f2a:	e7b9      	b.n	8000ea0 <_printf_i+0x118>
 8000f2c:	6813      	ldr	r3, [r2, #0]
 8000f2e:	1d19      	adds	r1, r3, #4
 8000f30:	6011      	str	r1, [r2, #0]
 8000f32:	681d      	ldr	r5, [r3, #0]
 8000f34:	6862      	ldr	r2, [r4, #4]
 8000f36:	2100      	movs	r1, #0
 8000f38:	4628      	mov	r0, r5
 8000f3a:	f7ff f959 	bl	80001f0 <memchr>
 8000f3e:	b108      	cbz	r0, 8000f44 <_printf_i+0x1bc>
 8000f40:	1b40      	subs	r0, r0, r5
 8000f42:	6060      	str	r0, [r4, #4]
 8000f44:	6863      	ldr	r3, [r4, #4]
 8000f46:	6123      	str	r3, [r4, #16]
 8000f48:	2300      	movs	r3, #0
 8000f4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f4e:	e7a7      	b.n	8000ea0 <_printf_i+0x118>
 8000f50:	6923      	ldr	r3, [r4, #16]
 8000f52:	462a      	mov	r2, r5
 8000f54:	4639      	mov	r1, r7
 8000f56:	4630      	mov	r0, r6
 8000f58:	47c0      	blx	r8
 8000f5a:	3001      	adds	r0, #1
 8000f5c:	d0aa      	beq.n	8000eb4 <_printf_i+0x12c>
 8000f5e:	6823      	ldr	r3, [r4, #0]
 8000f60:	079b      	lsls	r3, r3, #30
 8000f62:	d413      	bmi.n	8000f8c <_printf_i+0x204>
 8000f64:	68e0      	ldr	r0, [r4, #12]
 8000f66:	9b03      	ldr	r3, [sp, #12]
 8000f68:	4298      	cmp	r0, r3
 8000f6a:	bfb8      	it	lt
 8000f6c:	4618      	movlt	r0, r3
 8000f6e:	e7a3      	b.n	8000eb8 <_printf_i+0x130>
 8000f70:	2301      	movs	r3, #1
 8000f72:	464a      	mov	r2, r9
 8000f74:	4639      	mov	r1, r7
 8000f76:	4630      	mov	r0, r6
 8000f78:	47c0      	blx	r8
 8000f7a:	3001      	adds	r0, #1
 8000f7c:	d09a      	beq.n	8000eb4 <_printf_i+0x12c>
 8000f7e:	3501      	adds	r5, #1
 8000f80:	68e3      	ldr	r3, [r4, #12]
 8000f82:	9a03      	ldr	r2, [sp, #12]
 8000f84:	1a9b      	subs	r3, r3, r2
 8000f86:	42ab      	cmp	r3, r5
 8000f88:	dcf2      	bgt.n	8000f70 <_printf_i+0x1e8>
 8000f8a:	e7eb      	b.n	8000f64 <_printf_i+0x1dc>
 8000f8c:	2500      	movs	r5, #0
 8000f8e:	f104 0919 	add.w	r9, r4, #25
 8000f92:	e7f5      	b.n	8000f80 <_printf_i+0x1f8>
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d1ac      	bne.n	8000ef2 <_printf_i+0x16a>
 8000f98:	7803      	ldrb	r3, [r0, #0]
 8000f9a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000f9e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fa2:	e76c      	b.n	8000e7e <_printf_i+0xf6>
 8000fa4:	080016f9 	.word	0x080016f9
 8000fa8:	0800170a 	.word	0x0800170a

08000fac <_sbrk_r>:
 8000fac:	b538      	push	{r3, r4, r5, lr}
 8000fae:	4c06      	ldr	r4, [pc, #24]	; (8000fc8 <_sbrk_r+0x1c>)
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	4605      	mov	r5, r0
 8000fb4:	4608      	mov	r0, r1
 8000fb6:	6023      	str	r3, [r4, #0]
 8000fb8:	f7ff fb6c 	bl	8000694 <_sbrk>
 8000fbc:	1c43      	adds	r3, r0, #1
 8000fbe:	d102      	bne.n	8000fc6 <_sbrk_r+0x1a>
 8000fc0:	6823      	ldr	r3, [r4, #0]
 8000fc2:	b103      	cbz	r3, 8000fc6 <_sbrk_r+0x1a>
 8000fc4:	602b      	str	r3, [r5, #0]
 8000fc6:	bd38      	pop	{r3, r4, r5, pc}
 8000fc8:	2000008c 	.word	0x2000008c

08000fcc <__sread>:
 8000fcc:	b510      	push	{r4, lr}
 8000fce:	460c      	mov	r4, r1
 8000fd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fd4:	f000 fa96 	bl	8001504 <_read_r>
 8000fd8:	2800      	cmp	r0, #0
 8000fda:	bfab      	itete	ge
 8000fdc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000fde:	89a3      	ldrhlt	r3, [r4, #12]
 8000fe0:	181b      	addge	r3, r3, r0
 8000fe2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000fe6:	bfac      	ite	ge
 8000fe8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000fea:	81a3      	strhlt	r3, [r4, #12]
 8000fec:	bd10      	pop	{r4, pc}

08000fee <__swrite>:
 8000fee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ff2:	461f      	mov	r7, r3
 8000ff4:	898b      	ldrh	r3, [r1, #12]
 8000ff6:	05db      	lsls	r3, r3, #23
 8000ff8:	4605      	mov	r5, r0
 8000ffa:	460c      	mov	r4, r1
 8000ffc:	4616      	mov	r6, r2
 8000ffe:	d505      	bpl.n	800100c <__swrite+0x1e>
 8001000:	2302      	movs	r3, #2
 8001002:	2200      	movs	r2, #0
 8001004:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001008:	f000 f9b6 	bl	8001378 <_lseek_r>
 800100c:	89a3      	ldrh	r3, [r4, #12]
 800100e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001012:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001016:	81a3      	strh	r3, [r4, #12]
 8001018:	4632      	mov	r2, r6
 800101a:	463b      	mov	r3, r7
 800101c:	4628      	mov	r0, r5
 800101e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001022:	f000 b869 	b.w	80010f8 <_write_r>

08001026 <__sseek>:
 8001026:	b510      	push	{r4, lr}
 8001028:	460c      	mov	r4, r1
 800102a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800102e:	f000 f9a3 	bl	8001378 <_lseek_r>
 8001032:	1c43      	adds	r3, r0, #1
 8001034:	89a3      	ldrh	r3, [r4, #12]
 8001036:	bf15      	itete	ne
 8001038:	6560      	strne	r0, [r4, #84]	; 0x54
 800103a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800103e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001042:	81a3      	strheq	r3, [r4, #12]
 8001044:	bf18      	it	ne
 8001046:	81a3      	strhne	r3, [r4, #12]
 8001048:	bd10      	pop	{r4, pc}

0800104a <__sclose>:
 800104a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800104e:	f000 b8d3 	b.w	80011f8 <_close_r>
	...

08001054 <__swbuf_r>:
 8001054:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001056:	460e      	mov	r6, r1
 8001058:	4614      	mov	r4, r2
 800105a:	4605      	mov	r5, r0
 800105c:	b118      	cbz	r0, 8001066 <__swbuf_r+0x12>
 800105e:	6983      	ldr	r3, [r0, #24]
 8001060:	b90b      	cbnz	r3, 8001066 <__swbuf_r+0x12>
 8001062:	f7ff fbf7 	bl	8000854 <__sinit>
 8001066:	4b21      	ldr	r3, [pc, #132]	; (80010ec <__swbuf_r+0x98>)
 8001068:	429c      	cmp	r4, r3
 800106a:	d12a      	bne.n	80010c2 <__swbuf_r+0x6e>
 800106c:	686c      	ldr	r4, [r5, #4]
 800106e:	69a3      	ldr	r3, [r4, #24]
 8001070:	60a3      	str	r3, [r4, #8]
 8001072:	89a3      	ldrh	r3, [r4, #12]
 8001074:	071a      	lsls	r2, r3, #28
 8001076:	d52e      	bpl.n	80010d6 <__swbuf_r+0x82>
 8001078:	6923      	ldr	r3, [r4, #16]
 800107a:	b363      	cbz	r3, 80010d6 <__swbuf_r+0x82>
 800107c:	6923      	ldr	r3, [r4, #16]
 800107e:	6820      	ldr	r0, [r4, #0]
 8001080:	1ac0      	subs	r0, r0, r3
 8001082:	6963      	ldr	r3, [r4, #20]
 8001084:	b2f6      	uxtb	r6, r6
 8001086:	4283      	cmp	r3, r0
 8001088:	4637      	mov	r7, r6
 800108a:	dc04      	bgt.n	8001096 <__swbuf_r+0x42>
 800108c:	4621      	mov	r1, r4
 800108e:	4628      	mov	r0, r5
 8001090:	f000 f948 	bl	8001324 <_fflush_r>
 8001094:	bb28      	cbnz	r0, 80010e2 <__swbuf_r+0x8e>
 8001096:	68a3      	ldr	r3, [r4, #8]
 8001098:	3b01      	subs	r3, #1
 800109a:	60a3      	str	r3, [r4, #8]
 800109c:	6823      	ldr	r3, [r4, #0]
 800109e:	1c5a      	adds	r2, r3, #1
 80010a0:	6022      	str	r2, [r4, #0]
 80010a2:	701e      	strb	r6, [r3, #0]
 80010a4:	6963      	ldr	r3, [r4, #20]
 80010a6:	3001      	adds	r0, #1
 80010a8:	4283      	cmp	r3, r0
 80010aa:	d004      	beq.n	80010b6 <__swbuf_r+0x62>
 80010ac:	89a3      	ldrh	r3, [r4, #12]
 80010ae:	07db      	lsls	r3, r3, #31
 80010b0:	d519      	bpl.n	80010e6 <__swbuf_r+0x92>
 80010b2:	2e0a      	cmp	r6, #10
 80010b4:	d117      	bne.n	80010e6 <__swbuf_r+0x92>
 80010b6:	4621      	mov	r1, r4
 80010b8:	4628      	mov	r0, r5
 80010ba:	f000 f933 	bl	8001324 <_fflush_r>
 80010be:	b190      	cbz	r0, 80010e6 <__swbuf_r+0x92>
 80010c0:	e00f      	b.n	80010e2 <__swbuf_r+0x8e>
 80010c2:	4b0b      	ldr	r3, [pc, #44]	; (80010f0 <__swbuf_r+0x9c>)
 80010c4:	429c      	cmp	r4, r3
 80010c6:	d101      	bne.n	80010cc <__swbuf_r+0x78>
 80010c8:	68ac      	ldr	r4, [r5, #8]
 80010ca:	e7d0      	b.n	800106e <__swbuf_r+0x1a>
 80010cc:	4b09      	ldr	r3, [pc, #36]	; (80010f4 <__swbuf_r+0xa0>)
 80010ce:	429c      	cmp	r4, r3
 80010d0:	bf08      	it	eq
 80010d2:	68ec      	ldreq	r4, [r5, #12]
 80010d4:	e7cb      	b.n	800106e <__swbuf_r+0x1a>
 80010d6:	4621      	mov	r1, r4
 80010d8:	4628      	mov	r0, r5
 80010da:	f000 f81f 	bl	800111c <__swsetup_r>
 80010de:	2800      	cmp	r0, #0
 80010e0:	d0cc      	beq.n	800107c <__swbuf_r+0x28>
 80010e2:	f04f 37ff 	mov.w	r7, #4294967295
 80010e6:	4638      	mov	r0, r7
 80010e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010ea:	bf00      	nop
 80010ec:	080016a8 	.word	0x080016a8
 80010f0:	080016c8 	.word	0x080016c8
 80010f4:	08001688 	.word	0x08001688

080010f8 <_write_r>:
 80010f8:	b538      	push	{r3, r4, r5, lr}
 80010fa:	4c07      	ldr	r4, [pc, #28]	; (8001118 <_write_r+0x20>)
 80010fc:	4605      	mov	r5, r0
 80010fe:	4608      	mov	r0, r1
 8001100:	4611      	mov	r1, r2
 8001102:	2200      	movs	r2, #0
 8001104:	6022      	str	r2, [r4, #0]
 8001106:	461a      	mov	r2, r3
 8001108:	f7ff fa73 	bl	80005f2 <_write>
 800110c:	1c43      	adds	r3, r0, #1
 800110e:	d102      	bne.n	8001116 <_write_r+0x1e>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	b103      	cbz	r3, 8001116 <_write_r+0x1e>
 8001114:	602b      	str	r3, [r5, #0]
 8001116:	bd38      	pop	{r3, r4, r5, pc}
 8001118:	2000008c 	.word	0x2000008c

0800111c <__swsetup_r>:
 800111c:	4b32      	ldr	r3, [pc, #200]	; (80011e8 <__swsetup_r+0xcc>)
 800111e:	b570      	push	{r4, r5, r6, lr}
 8001120:	681d      	ldr	r5, [r3, #0]
 8001122:	4606      	mov	r6, r0
 8001124:	460c      	mov	r4, r1
 8001126:	b125      	cbz	r5, 8001132 <__swsetup_r+0x16>
 8001128:	69ab      	ldr	r3, [r5, #24]
 800112a:	b913      	cbnz	r3, 8001132 <__swsetup_r+0x16>
 800112c:	4628      	mov	r0, r5
 800112e:	f7ff fb91 	bl	8000854 <__sinit>
 8001132:	4b2e      	ldr	r3, [pc, #184]	; (80011ec <__swsetup_r+0xd0>)
 8001134:	429c      	cmp	r4, r3
 8001136:	d10f      	bne.n	8001158 <__swsetup_r+0x3c>
 8001138:	686c      	ldr	r4, [r5, #4]
 800113a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800113e:	b29a      	uxth	r2, r3
 8001140:	0715      	lsls	r5, r2, #28
 8001142:	d42c      	bmi.n	800119e <__swsetup_r+0x82>
 8001144:	06d0      	lsls	r0, r2, #27
 8001146:	d411      	bmi.n	800116c <__swsetup_r+0x50>
 8001148:	2209      	movs	r2, #9
 800114a:	6032      	str	r2, [r6, #0]
 800114c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001150:	81a3      	strh	r3, [r4, #12]
 8001152:	f04f 30ff 	mov.w	r0, #4294967295
 8001156:	e03e      	b.n	80011d6 <__swsetup_r+0xba>
 8001158:	4b25      	ldr	r3, [pc, #148]	; (80011f0 <__swsetup_r+0xd4>)
 800115a:	429c      	cmp	r4, r3
 800115c:	d101      	bne.n	8001162 <__swsetup_r+0x46>
 800115e:	68ac      	ldr	r4, [r5, #8]
 8001160:	e7eb      	b.n	800113a <__swsetup_r+0x1e>
 8001162:	4b24      	ldr	r3, [pc, #144]	; (80011f4 <__swsetup_r+0xd8>)
 8001164:	429c      	cmp	r4, r3
 8001166:	bf08      	it	eq
 8001168:	68ec      	ldreq	r4, [r5, #12]
 800116a:	e7e6      	b.n	800113a <__swsetup_r+0x1e>
 800116c:	0751      	lsls	r1, r2, #29
 800116e:	d512      	bpl.n	8001196 <__swsetup_r+0x7a>
 8001170:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001172:	b141      	cbz	r1, 8001186 <__swsetup_r+0x6a>
 8001174:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001178:	4299      	cmp	r1, r3
 800117a:	d002      	beq.n	8001182 <__swsetup_r+0x66>
 800117c:	4630      	mov	r0, r6
 800117e:	f000 f973 	bl	8001468 <_free_r>
 8001182:	2300      	movs	r3, #0
 8001184:	6363      	str	r3, [r4, #52]	; 0x34
 8001186:	89a3      	ldrh	r3, [r4, #12]
 8001188:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800118c:	81a3      	strh	r3, [r4, #12]
 800118e:	2300      	movs	r3, #0
 8001190:	6063      	str	r3, [r4, #4]
 8001192:	6923      	ldr	r3, [r4, #16]
 8001194:	6023      	str	r3, [r4, #0]
 8001196:	89a3      	ldrh	r3, [r4, #12]
 8001198:	f043 0308 	orr.w	r3, r3, #8
 800119c:	81a3      	strh	r3, [r4, #12]
 800119e:	6923      	ldr	r3, [r4, #16]
 80011a0:	b94b      	cbnz	r3, 80011b6 <__swsetup_r+0x9a>
 80011a2:	89a3      	ldrh	r3, [r4, #12]
 80011a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011ac:	d003      	beq.n	80011b6 <__swsetup_r+0x9a>
 80011ae:	4621      	mov	r1, r4
 80011b0:	4630      	mov	r0, r6
 80011b2:	f000 f917 	bl	80013e4 <__smakebuf_r>
 80011b6:	89a2      	ldrh	r2, [r4, #12]
 80011b8:	f012 0301 	ands.w	r3, r2, #1
 80011bc:	d00c      	beq.n	80011d8 <__swsetup_r+0xbc>
 80011be:	2300      	movs	r3, #0
 80011c0:	60a3      	str	r3, [r4, #8]
 80011c2:	6963      	ldr	r3, [r4, #20]
 80011c4:	425b      	negs	r3, r3
 80011c6:	61a3      	str	r3, [r4, #24]
 80011c8:	6923      	ldr	r3, [r4, #16]
 80011ca:	b953      	cbnz	r3, 80011e2 <__swsetup_r+0xc6>
 80011cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011d0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80011d4:	d1ba      	bne.n	800114c <__swsetup_r+0x30>
 80011d6:	bd70      	pop	{r4, r5, r6, pc}
 80011d8:	0792      	lsls	r2, r2, #30
 80011da:	bf58      	it	pl
 80011dc:	6963      	ldrpl	r3, [r4, #20]
 80011de:	60a3      	str	r3, [r4, #8]
 80011e0:	e7f2      	b.n	80011c8 <__swsetup_r+0xac>
 80011e2:	2000      	movs	r0, #0
 80011e4:	e7f7      	b.n	80011d6 <__swsetup_r+0xba>
 80011e6:	bf00      	nop
 80011e8:	20000000 	.word	0x20000000
 80011ec:	080016a8 	.word	0x080016a8
 80011f0:	080016c8 	.word	0x080016c8
 80011f4:	08001688 	.word	0x08001688

080011f8 <_close_r>:
 80011f8:	b538      	push	{r3, r4, r5, lr}
 80011fa:	4c06      	ldr	r4, [pc, #24]	; (8001214 <_close_r+0x1c>)
 80011fc:	2300      	movs	r3, #0
 80011fe:	4605      	mov	r5, r0
 8001200:	4608      	mov	r0, r1
 8001202:	6023      	str	r3, [r4, #0]
 8001204:	f7ff fa11 	bl	800062a <_close>
 8001208:	1c43      	adds	r3, r0, #1
 800120a:	d102      	bne.n	8001212 <_close_r+0x1a>
 800120c:	6823      	ldr	r3, [r4, #0]
 800120e:	b103      	cbz	r3, 8001212 <_close_r+0x1a>
 8001210:	602b      	str	r3, [r5, #0]
 8001212:	bd38      	pop	{r3, r4, r5, pc}
 8001214:	2000008c 	.word	0x2000008c

08001218 <__sflush_r>:
 8001218:	898a      	ldrh	r2, [r1, #12]
 800121a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800121e:	4605      	mov	r5, r0
 8001220:	0710      	lsls	r0, r2, #28
 8001222:	460c      	mov	r4, r1
 8001224:	d458      	bmi.n	80012d8 <__sflush_r+0xc0>
 8001226:	684b      	ldr	r3, [r1, #4]
 8001228:	2b00      	cmp	r3, #0
 800122a:	dc05      	bgt.n	8001238 <__sflush_r+0x20>
 800122c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800122e:	2b00      	cmp	r3, #0
 8001230:	dc02      	bgt.n	8001238 <__sflush_r+0x20>
 8001232:	2000      	movs	r0, #0
 8001234:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001238:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800123a:	2e00      	cmp	r6, #0
 800123c:	d0f9      	beq.n	8001232 <__sflush_r+0x1a>
 800123e:	2300      	movs	r3, #0
 8001240:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001244:	682f      	ldr	r7, [r5, #0]
 8001246:	6a21      	ldr	r1, [r4, #32]
 8001248:	602b      	str	r3, [r5, #0]
 800124a:	d032      	beq.n	80012b2 <__sflush_r+0x9a>
 800124c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800124e:	89a3      	ldrh	r3, [r4, #12]
 8001250:	075a      	lsls	r2, r3, #29
 8001252:	d505      	bpl.n	8001260 <__sflush_r+0x48>
 8001254:	6863      	ldr	r3, [r4, #4]
 8001256:	1ac0      	subs	r0, r0, r3
 8001258:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800125a:	b10b      	cbz	r3, 8001260 <__sflush_r+0x48>
 800125c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800125e:	1ac0      	subs	r0, r0, r3
 8001260:	2300      	movs	r3, #0
 8001262:	4602      	mov	r2, r0
 8001264:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001266:	6a21      	ldr	r1, [r4, #32]
 8001268:	4628      	mov	r0, r5
 800126a:	47b0      	blx	r6
 800126c:	1c43      	adds	r3, r0, #1
 800126e:	89a3      	ldrh	r3, [r4, #12]
 8001270:	d106      	bne.n	8001280 <__sflush_r+0x68>
 8001272:	6829      	ldr	r1, [r5, #0]
 8001274:	291d      	cmp	r1, #29
 8001276:	d848      	bhi.n	800130a <__sflush_r+0xf2>
 8001278:	4a29      	ldr	r2, [pc, #164]	; (8001320 <__sflush_r+0x108>)
 800127a:	40ca      	lsrs	r2, r1
 800127c:	07d6      	lsls	r6, r2, #31
 800127e:	d544      	bpl.n	800130a <__sflush_r+0xf2>
 8001280:	2200      	movs	r2, #0
 8001282:	6062      	str	r2, [r4, #4]
 8001284:	04d9      	lsls	r1, r3, #19
 8001286:	6922      	ldr	r2, [r4, #16]
 8001288:	6022      	str	r2, [r4, #0]
 800128a:	d504      	bpl.n	8001296 <__sflush_r+0x7e>
 800128c:	1c42      	adds	r2, r0, #1
 800128e:	d101      	bne.n	8001294 <__sflush_r+0x7c>
 8001290:	682b      	ldr	r3, [r5, #0]
 8001292:	b903      	cbnz	r3, 8001296 <__sflush_r+0x7e>
 8001294:	6560      	str	r0, [r4, #84]	; 0x54
 8001296:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001298:	602f      	str	r7, [r5, #0]
 800129a:	2900      	cmp	r1, #0
 800129c:	d0c9      	beq.n	8001232 <__sflush_r+0x1a>
 800129e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012a2:	4299      	cmp	r1, r3
 80012a4:	d002      	beq.n	80012ac <__sflush_r+0x94>
 80012a6:	4628      	mov	r0, r5
 80012a8:	f000 f8de 	bl	8001468 <_free_r>
 80012ac:	2000      	movs	r0, #0
 80012ae:	6360      	str	r0, [r4, #52]	; 0x34
 80012b0:	e7c0      	b.n	8001234 <__sflush_r+0x1c>
 80012b2:	2301      	movs	r3, #1
 80012b4:	4628      	mov	r0, r5
 80012b6:	47b0      	blx	r6
 80012b8:	1c41      	adds	r1, r0, #1
 80012ba:	d1c8      	bne.n	800124e <__sflush_r+0x36>
 80012bc:	682b      	ldr	r3, [r5, #0]
 80012be:	2b00      	cmp	r3, #0
 80012c0:	d0c5      	beq.n	800124e <__sflush_r+0x36>
 80012c2:	2b1d      	cmp	r3, #29
 80012c4:	d001      	beq.n	80012ca <__sflush_r+0xb2>
 80012c6:	2b16      	cmp	r3, #22
 80012c8:	d101      	bne.n	80012ce <__sflush_r+0xb6>
 80012ca:	602f      	str	r7, [r5, #0]
 80012cc:	e7b1      	b.n	8001232 <__sflush_r+0x1a>
 80012ce:	89a3      	ldrh	r3, [r4, #12]
 80012d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012d4:	81a3      	strh	r3, [r4, #12]
 80012d6:	e7ad      	b.n	8001234 <__sflush_r+0x1c>
 80012d8:	690f      	ldr	r7, [r1, #16]
 80012da:	2f00      	cmp	r7, #0
 80012dc:	d0a9      	beq.n	8001232 <__sflush_r+0x1a>
 80012de:	0793      	lsls	r3, r2, #30
 80012e0:	680e      	ldr	r6, [r1, #0]
 80012e2:	bf08      	it	eq
 80012e4:	694b      	ldreq	r3, [r1, #20]
 80012e6:	600f      	str	r7, [r1, #0]
 80012e8:	bf18      	it	ne
 80012ea:	2300      	movne	r3, #0
 80012ec:	eba6 0807 	sub.w	r8, r6, r7
 80012f0:	608b      	str	r3, [r1, #8]
 80012f2:	f1b8 0f00 	cmp.w	r8, #0
 80012f6:	dd9c      	ble.n	8001232 <__sflush_r+0x1a>
 80012f8:	4643      	mov	r3, r8
 80012fa:	463a      	mov	r2, r7
 80012fc:	6a21      	ldr	r1, [r4, #32]
 80012fe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001300:	4628      	mov	r0, r5
 8001302:	47b0      	blx	r6
 8001304:	2800      	cmp	r0, #0
 8001306:	dc06      	bgt.n	8001316 <__sflush_r+0xfe>
 8001308:	89a3      	ldrh	r3, [r4, #12]
 800130a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800130e:	81a3      	strh	r3, [r4, #12]
 8001310:	f04f 30ff 	mov.w	r0, #4294967295
 8001314:	e78e      	b.n	8001234 <__sflush_r+0x1c>
 8001316:	4407      	add	r7, r0
 8001318:	eba8 0800 	sub.w	r8, r8, r0
 800131c:	e7e9      	b.n	80012f2 <__sflush_r+0xda>
 800131e:	bf00      	nop
 8001320:	20400001 	.word	0x20400001

08001324 <_fflush_r>:
 8001324:	b538      	push	{r3, r4, r5, lr}
 8001326:	690b      	ldr	r3, [r1, #16]
 8001328:	4605      	mov	r5, r0
 800132a:	460c      	mov	r4, r1
 800132c:	b1db      	cbz	r3, 8001366 <_fflush_r+0x42>
 800132e:	b118      	cbz	r0, 8001338 <_fflush_r+0x14>
 8001330:	6983      	ldr	r3, [r0, #24]
 8001332:	b90b      	cbnz	r3, 8001338 <_fflush_r+0x14>
 8001334:	f7ff fa8e 	bl	8000854 <__sinit>
 8001338:	4b0c      	ldr	r3, [pc, #48]	; (800136c <_fflush_r+0x48>)
 800133a:	429c      	cmp	r4, r3
 800133c:	d109      	bne.n	8001352 <_fflush_r+0x2e>
 800133e:	686c      	ldr	r4, [r5, #4]
 8001340:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001344:	b17b      	cbz	r3, 8001366 <_fflush_r+0x42>
 8001346:	4621      	mov	r1, r4
 8001348:	4628      	mov	r0, r5
 800134a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800134e:	f7ff bf63 	b.w	8001218 <__sflush_r>
 8001352:	4b07      	ldr	r3, [pc, #28]	; (8001370 <_fflush_r+0x4c>)
 8001354:	429c      	cmp	r4, r3
 8001356:	d101      	bne.n	800135c <_fflush_r+0x38>
 8001358:	68ac      	ldr	r4, [r5, #8]
 800135a:	e7f1      	b.n	8001340 <_fflush_r+0x1c>
 800135c:	4b05      	ldr	r3, [pc, #20]	; (8001374 <_fflush_r+0x50>)
 800135e:	429c      	cmp	r4, r3
 8001360:	bf08      	it	eq
 8001362:	68ec      	ldreq	r4, [r5, #12]
 8001364:	e7ec      	b.n	8001340 <_fflush_r+0x1c>
 8001366:	2000      	movs	r0, #0
 8001368:	bd38      	pop	{r3, r4, r5, pc}
 800136a:	bf00      	nop
 800136c:	080016a8 	.word	0x080016a8
 8001370:	080016c8 	.word	0x080016c8
 8001374:	08001688 	.word	0x08001688

08001378 <_lseek_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	4c07      	ldr	r4, [pc, #28]	; (8001398 <_lseek_r+0x20>)
 800137c:	4605      	mov	r5, r0
 800137e:	4608      	mov	r0, r1
 8001380:	4611      	mov	r1, r2
 8001382:	2200      	movs	r2, #0
 8001384:	6022      	str	r2, [r4, #0]
 8001386:	461a      	mov	r2, r3
 8001388:	f7ff f976 	bl	8000678 <_lseek>
 800138c:	1c43      	adds	r3, r0, #1
 800138e:	d102      	bne.n	8001396 <_lseek_r+0x1e>
 8001390:	6823      	ldr	r3, [r4, #0]
 8001392:	b103      	cbz	r3, 8001396 <_lseek_r+0x1e>
 8001394:	602b      	str	r3, [r5, #0]
 8001396:	bd38      	pop	{r3, r4, r5, pc}
 8001398:	2000008c 	.word	0x2000008c

0800139c <__swhatbuf_r>:
 800139c:	b570      	push	{r4, r5, r6, lr}
 800139e:	460e      	mov	r6, r1
 80013a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a4:	2900      	cmp	r1, #0
 80013a6:	b096      	sub	sp, #88	; 0x58
 80013a8:	4614      	mov	r4, r2
 80013aa:	461d      	mov	r5, r3
 80013ac:	da07      	bge.n	80013be <__swhatbuf_r+0x22>
 80013ae:	2300      	movs	r3, #0
 80013b0:	602b      	str	r3, [r5, #0]
 80013b2:	89b3      	ldrh	r3, [r6, #12]
 80013b4:	061a      	lsls	r2, r3, #24
 80013b6:	d410      	bmi.n	80013da <__swhatbuf_r+0x3e>
 80013b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013bc:	e00e      	b.n	80013dc <__swhatbuf_r+0x40>
 80013be:	466a      	mov	r2, sp
 80013c0:	f000 f8b2 	bl	8001528 <_fstat_r>
 80013c4:	2800      	cmp	r0, #0
 80013c6:	dbf2      	blt.n	80013ae <__swhatbuf_r+0x12>
 80013c8:	9a01      	ldr	r2, [sp, #4]
 80013ca:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80013ce:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80013d2:	425a      	negs	r2, r3
 80013d4:	415a      	adcs	r2, r3
 80013d6:	602a      	str	r2, [r5, #0]
 80013d8:	e7ee      	b.n	80013b8 <__swhatbuf_r+0x1c>
 80013da:	2340      	movs	r3, #64	; 0x40
 80013dc:	2000      	movs	r0, #0
 80013de:	6023      	str	r3, [r4, #0]
 80013e0:	b016      	add	sp, #88	; 0x58
 80013e2:	bd70      	pop	{r4, r5, r6, pc}

080013e4 <__smakebuf_r>:
 80013e4:	898b      	ldrh	r3, [r1, #12]
 80013e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013e8:	079d      	lsls	r5, r3, #30
 80013ea:	4606      	mov	r6, r0
 80013ec:	460c      	mov	r4, r1
 80013ee:	d507      	bpl.n	8001400 <__smakebuf_r+0x1c>
 80013f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013f4:	6023      	str	r3, [r4, #0]
 80013f6:	6123      	str	r3, [r4, #16]
 80013f8:	2301      	movs	r3, #1
 80013fa:	6163      	str	r3, [r4, #20]
 80013fc:	b002      	add	sp, #8
 80013fe:	bd70      	pop	{r4, r5, r6, pc}
 8001400:	ab01      	add	r3, sp, #4
 8001402:	466a      	mov	r2, sp
 8001404:	f7ff ffca 	bl	800139c <__swhatbuf_r>
 8001408:	9900      	ldr	r1, [sp, #0]
 800140a:	4605      	mov	r5, r0
 800140c:	4630      	mov	r0, r6
 800140e:	f7ff faab 	bl	8000968 <_malloc_r>
 8001412:	b948      	cbnz	r0, 8001428 <__smakebuf_r+0x44>
 8001414:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001418:	059a      	lsls	r2, r3, #22
 800141a:	d4ef      	bmi.n	80013fc <__smakebuf_r+0x18>
 800141c:	f023 0303 	bic.w	r3, r3, #3
 8001420:	f043 0302 	orr.w	r3, r3, #2
 8001424:	81a3      	strh	r3, [r4, #12]
 8001426:	e7e3      	b.n	80013f0 <__smakebuf_r+0xc>
 8001428:	4b0d      	ldr	r3, [pc, #52]	; (8001460 <__smakebuf_r+0x7c>)
 800142a:	62b3      	str	r3, [r6, #40]	; 0x28
 800142c:	89a3      	ldrh	r3, [r4, #12]
 800142e:	6020      	str	r0, [r4, #0]
 8001430:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001434:	81a3      	strh	r3, [r4, #12]
 8001436:	9b00      	ldr	r3, [sp, #0]
 8001438:	6163      	str	r3, [r4, #20]
 800143a:	9b01      	ldr	r3, [sp, #4]
 800143c:	6120      	str	r0, [r4, #16]
 800143e:	b15b      	cbz	r3, 8001458 <__smakebuf_r+0x74>
 8001440:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001444:	4630      	mov	r0, r6
 8001446:	f000 f881 	bl	800154c <_isatty_r>
 800144a:	b128      	cbz	r0, 8001458 <__smakebuf_r+0x74>
 800144c:	89a3      	ldrh	r3, [r4, #12]
 800144e:	f023 0303 	bic.w	r3, r3, #3
 8001452:	f043 0301 	orr.w	r3, r3, #1
 8001456:	81a3      	strh	r3, [r4, #12]
 8001458:	89a3      	ldrh	r3, [r4, #12]
 800145a:	431d      	orrs	r5, r3
 800145c:	81a5      	strh	r5, [r4, #12]
 800145e:	e7cd      	b.n	80013fc <__smakebuf_r+0x18>
 8001460:	0800081d 	.word	0x0800081d

08001464 <__malloc_lock>:
 8001464:	4770      	bx	lr

08001466 <__malloc_unlock>:
 8001466:	4770      	bx	lr

08001468 <_free_r>:
 8001468:	b538      	push	{r3, r4, r5, lr}
 800146a:	4605      	mov	r5, r0
 800146c:	2900      	cmp	r1, #0
 800146e:	d045      	beq.n	80014fc <_free_r+0x94>
 8001470:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001474:	1f0c      	subs	r4, r1, #4
 8001476:	2b00      	cmp	r3, #0
 8001478:	bfb8      	it	lt
 800147a:	18e4      	addlt	r4, r4, r3
 800147c:	f7ff fff2 	bl	8001464 <__malloc_lock>
 8001480:	4a1f      	ldr	r2, [pc, #124]	; (8001500 <_free_r+0x98>)
 8001482:	6813      	ldr	r3, [r2, #0]
 8001484:	4610      	mov	r0, r2
 8001486:	b933      	cbnz	r3, 8001496 <_free_r+0x2e>
 8001488:	6063      	str	r3, [r4, #4]
 800148a:	6014      	str	r4, [r2, #0]
 800148c:	4628      	mov	r0, r5
 800148e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001492:	f7ff bfe8 	b.w	8001466 <__malloc_unlock>
 8001496:	42a3      	cmp	r3, r4
 8001498:	d90c      	bls.n	80014b4 <_free_r+0x4c>
 800149a:	6821      	ldr	r1, [r4, #0]
 800149c:	1862      	adds	r2, r4, r1
 800149e:	4293      	cmp	r3, r2
 80014a0:	bf04      	itt	eq
 80014a2:	681a      	ldreq	r2, [r3, #0]
 80014a4:	685b      	ldreq	r3, [r3, #4]
 80014a6:	6063      	str	r3, [r4, #4]
 80014a8:	bf04      	itt	eq
 80014aa:	1852      	addeq	r2, r2, r1
 80014ac:	6022      	streq	r2, [r4, #0]
 80014ae:	6004      	str	r4, [r0, #0]
 80014b0:	e7ec      	b.n	800148c <_free_r+0x24>
 80014b2:	4613      	mov	r3, r2
 80014b4:	685a      	ldr	r2, [r3, #4]
 80014b6:	b10a      	cbz	r2, 80014bc <_free_r+0x54>
 80014b8:	42a2      	cmp	r2, r4
 80014ba:	d9fa      	bls.n	80014b2 <_free_r+0x4a>
 80014bc:	6819      	ldr	r1, [r3, #0]
 80014be:	1858      	adds	r0, r3, r1
 80014c0:	42a0      	cmp	r0, r4
 80014c2:	d10b      	bne.n	80014dc <_free_r+0x74>
 80014c4:	6820      	ldr	r0, [r4, #0]
 80014c6:	4401      	add	r1, r0
 80014c8:	1858      	adds	r0, r3, r1
 80014ca:	4282      	cmp	r2, r0
 80014cc:	6019      	str	r1, [r3, #0]
 80014ce:	d1dd      	bne.n	800148c <_free_r+0x24>
 80014d0:	6810      	ldr	r0, [r2, #0]
 80014d2:	6852      	ldr	r2, [r2, #4]
 80014d4:	605a      	str	r2, [r3, #4]
 80014d6:	4401      	add	r1, r0
 80014d8:	6019      	str	r1, [r3, #0]
 80014da:	e7d7      	b.n	800148c <_free_r+0x24>
 80014dc:	d902      	bls.n	80014e4 <_free_r+0x7c>
 80014de:	230c      	movs	r3, #12
 80014e0:	602b      	str	r3, [r5, #0]
 80014e2:	e7d3      	b.n	800148c <_free_r+0x24>
 80014e4:	6820      	ldr	r0, [r4, #0]
 80014e6:	1821      	adds	r1, r4, r0
 80014e8:	428a      	cmp	r2, r1
 80014ea:	bf04      	itt	eq
 80014ec:	6811      	ldreq	r1, [r2, #0]
 80014ee:	6852      	ldreq	r2, [r2, #4]
 80014f0:	6062      	str	r2, [r4, #4]
 80014f2:	bf04      	itt	eq
 80014f4:	1809      	addeq	r1, r1, r0
 80014f6:	6021      	streq	r1, [r4, #0]
 80014f8:	605c      	str	r4, [r3, #4]
 80014fa:	e7c7      	b.n	800148c <_free_r+0x24>
 80014fc:	bd38      	pop	{r3, r4, r5, pc}
 80014fe:	bf00      	nop
 8001500:	20000084 	.word	0x20000084

08001504 <_read_r>:
 8001504:	b538      	push	{r3, r4, r5, lr}
 8001506:	4c07      	ldr	r4, [pc, #28]	; (8001524 <_read_r+0x20>)
 8001508:	4605      	mov	r5, r0
 800150a:	4608      	mov	r0, r1
 800150c:	4611      	mov	r1, r2
 800150e:	2200      	movs	r2, #0
 8001510:	6022      	str	r2, [r4, #0]
 8001512:	461a      	mov	r2, r3
 8001514:	f7ff f850 	bl	80005b8 <_read>
 8001518:	1c43      	adds	r3, r0, #1
 800151a:	d102      	bne.n	8001522 <_read_r+0x1e>
 800151c:	6823      	ldr	r3, [r4, #0]
 800151e:	b103      	cbz	r3, 8001522 <_read_r+0x1e>
 8001520:	602b      	str	r3, [r5, #0]
 8001522:	bd38      	pop	{r3, r4, r5, pc}
 8001524:	2000008c 	.word	0x2000008c

08001528 <_fstat_r>:
 8001528:	b538      	push	{r3, r4, r5, lr}
 800152a:	4c07      	ldr	r4, [pc, #28]	; (8001548 <_fstat_r+0x20>)
 800152c:	2300      	movs	r3, #0
 800152e:	4605      	mov	r5, r0
 8001530:	4608      	mov	r0, r1
 8001532:	4611      	mov	r1, r2
 8001534:	6023      	str	r3, [r4, #0]
 8001536:	f7ff f884 	bl	8000642 <_fstat>
 800153a:	1c43      	adds	r3, r0, #1
 800153c:	d102      	bne.n	8001544 <_fstat_r+0x1c>
 800153e:	6823      	ldr	r3, [r4, #0]
 8001540:	b103      	cbz	r3, 8001544 <_fstat_r+0x1c>
 8001542:	602b      	str	r3, [r5, #0]
 8001544:	bd38      	pop	{r3, r4, r5, pc}
 8001546:	bf00      	nop
 8001548:	2000008c 	.word	0x2000008c

0800154c <_isatty_r>:
 800154c:	b538      	push	{r3, r4, r5, lr}
 800154e:	4c06      	ldr	r4, [pc, #24]	; (8001568 <_isatty_r+0x1c>)
 8001550:	2300      	movs	r3, #0
 8001552:	4605      	mov	r5, r0
 8001554:	4608      	mov	r0, r1
 8001556:	6023      	str	r3, [r4, #0]
 8001558:	f7ff f883 	bl	8000662 <_isatty>
 800155c:	1c43      	adds	r3, r0, #1
 800155e:	d102      	bne.n	8001566 <_isatty_r+0x1a>
 8001560:	6823      	ldr	r3, [r4, #0]
 8001562:	b103      	cbz	r3, 8001566 <_isatty_r+0x1a>
 8001564:	602b      	str	r3, [r5, #0]
 8001566:	bd38      	pop	{r3, r4, r5, pc}
 8001568:	2000008c 	.word	0x2000008c

0800156c <_init>:
 800156c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800156e:	bf00      	nop
 8001570:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001572:	bc08      	pop	{r3}
 8001574:	469e      	mov	lr, r3
 8001576:	4770      	bx	lr

08001578 <_fini>:
 8001578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800157a:	bf00      	nop
 800157c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800157e:	bc08      	pop	{r3}
 8001580:	469e      	mov	lr, r3
 8001582:	4770      	bx	lr
